// Generated by llvm2cpp - DO NOT MODIFY!

#include <llvm/Pass.h>
#include <llvm/ADT/SmallVector.h>
#include <llvm/Analysis/Verifier.h>
#include <llvm/IR/BasicBlock.h>
#include <llvm/IR/CallingConv.h>
#include <llvm/IR/Constants.h>
#include <llvm/IR/DerivedTypes.h>
#include <llvm/IR/Function.h>
#include <llvm/IR/GlobalVariable.h>
#include <llvm/IR/IRPrintingPasses.h>
#include <llvm/IR/InlineAsm.h>
#include <llvm/IR/Instructions.h>
#include <llvm/IR/LLVMContext.h>
#include <llvm/IR/LegacyPassManager.h>
#include <llvm/IR/Module.h>
#include <llvm/Support/FormattedStream.h>
#include <llvm/Support/MathExtras.h>
#include <algorithm>
using namespace llvm;

Module* makeLLVMModule();

int main(int argc, char**argv) {
  Module* Mod = makeLLVMModule();
  verifyModule(*Mod, PrintMessageAction);
  PassManager PM;
  PM.add(createPrintModulePass(&outs()));
  PM.run(*Mod);
  return 0;
}


Module* makeLLVMModule() {
 // Module Construction
 Module* mod = new Module("util.bc", getGlobalContext());
 mod->setDataLayout("");
 mod->setTargetTriple("x86_64-unknown-linux-gnu");
 
 // Type Definitions
 ArrayType* ArrayTy_0 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 4);
 
 PointerType* PointerTy_1 = PointerType::get(ArrayTy_0, 0);
 
 StructType *StructTy_struct__IO_FILE = mod->getTypeByName("struct._IO_FILE");
 if (!StructTy_struct__IO_FILE) {
 StructTy_struct__IO_FILE = StructType::create(mod->getContext(), "struct._IO_FILE");
 }
 std::vector<Type*>StructTy_struct__IO_FILE_fields;
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 PointerType* PointerTy_4 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);
 
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructType *StructTy_struct__IO_marker = mod->getTypeByName("struct._IO_marker");
 if (!StructTy_struct__IO_marker) {
 StructTy_struct__IO_marker = StructType::create(mod->getContext(), "struct._IO_marker");
 }
 std::vector<Type*>StructTy_struct__IO_marker_fields;
 PointerType* PointerTy_5 = PointerType::get(StructTy_struct__IO_marker, 0);
 
 StructTy_struct__IO_marker_fields.push_back(PointerTy_5);
 PointerType* PointerTy_3 = PointerType::get(StructTy_struct__IO_FILE, 0);
 
 StructTy_struct__IO_marker_fields.push_back(PointerTy_3);
 StructTy_struct__IO_marker_fields.push_back(IntegerType::get(mod->getContext(), 32));
 if (StructTy_struct__IO_marker->isOpaque()) {
 StructTy_struct__IO_marker->setBody(StructTy_struct__IO_marker_fields, /*isPacked=*/false);
 }
 
 
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_5);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_3);
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 16));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 8));
 ArrayType* ArrayTy_6 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 1);
 
 StructTy_struct__IO_FILE_fields.push_back(ArrayTy_6);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_4);
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 ArrayType* ArrayTy_7 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 20);
 
 StructTy_struct__IO_FILE_fields.push_back(ArrayTy_7);
 if (StructTy_struct__IO_FILE->isOpaque()) {
 StructTy_struct__IO_FILE->setBody(StructTy_struct__IO_FILE_fields, /*isPacked=*/false);
 }
 
 
 PointerType* PointerTy_2 = PointerType::get(PointerTy_3, 0);
 
 ArrayType* ArrayTy_8 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 54);
 
 PointerType* PointerTy_9 = PointerType::get(ArrayTy_8, 0);
 
 ArrayType* ArrayTy_10 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 8);
 
 PointerType* PointerTy_11 = PointerType::get(ArrayTy_10, 0);
 
 ArrayType* ArrayTy_12 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 9);
 
 PointerType* PointerTy_13 = PointerType::get(ArrayTy_12, 0);
 
 ArrayType* ArrayTy_14 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 6);
 
 PointerType* PointerTy_15 = PointerType::get(ArrayTy_14, 0);
 
 ArrayType* ArrayTy_16 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 2);
 
 PointerType* PointerTy_17 = PointerType::get(ArrayTy_16, 0);
 
 ArrayType* ArrayTy_18 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 3);
 
 PointerType* PointerTy_19 = PointerType::get(ArrayTy_18, 0);
 
 ArrayType* ArrayTy_20 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 5);
 
 PointerType* PointerTy_21 = PointerType::get(ArrayTy_20, 0);
 
 ArrayType* ArrayTy_22 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 15);
 
 PointerType* PointerTy_23 = PointerType::get(ArrayTy_22, 0);
 
 std::vector<Type*>FuncTy_24_args;
 FuncTy_24_args.push_back(PointerTy_4);
 FunctionType* FuncTy_24 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_24_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_25 = PointerType::get(PointerTy_4, 0);
 
 std::vector<Type*>FuncTy_27_args;
 FuncTy_27_args.push_back(PointerTy_4);
 FunctionType* FuncTy_27 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_27_args,
  /*isVarArg=*/true);
 
 PointerType* PointerTy_26 = PointerType::get(FuncTy_27, 0);
 
 std::vector<Type*>FuncTy_29_args;
 FuncTy_29_args.push_back(IntegerType::get(mod->getContext(), 32));
 FunctionType* FuncTy_29 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_29_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_28 = PointerType::get(FuncTy_29, 0);
 
 StructType *StructTy_struct_Object = mod->getTypeByName("struct.Object");
 if (!StructTy_struct_Object) {
 StructTy_struct_Object = StructType::create(mod->getContext(), "struct.Object");
 }
 std::vector<Type*>StructTy_struct_Object_fields;
 StructType *StructTy_union_anon = mod->getTypeByName("union.anon");
 if (!StructTy_union_anon) {
 StructTy_union_anon = StructType::create(mod->getContext(), "union.anon");
 }
 std::vector<Type*>StructTy_union_anon_fields;
 PointerType* PointerTy_30 = PointerType::get(StructTy_struct_Object, 0);
 
 StructTy_union_anon_fields.push_back(PointerTy_30);
 if (StructTy_union_anon->isOpaque()) {
 StructTy_union_anon->setBody(StructTy_union_anon_fields, /*isPacked=*/false);
 }
 
 StructTy_struct_Object_fields.push_back(StructTy_union_anon);
 StructType *StructTy_union_anon_0 = mod->getTypeByName("union.anon.0");
 if (!StructTy_union_anon_0) {
 StructTy_union_anon_0 = StructType::create(mod->getContext(), "union.anon.0");
 }
 std::vector<Type*>StructTy_union_anon_0_fields;
 StructTy_union_anon_0_fields.push_back(IntegerType::get(mod->getContext(), 64));
 if (StructTy_union_anon_0->isOpaque()) {
 StructTy_union_anon_0->setBody(StructTy_union_anon_0_fields, /*isPacked=*/false);
 }
 
 StructTy_struct_Object_fields.push_back(StructTy_union_anon_0);
 if (StructTy_struct_Object->isOpaque()) {
 StructTy_struct_Object->setBody(StructTy_struct_Object_fields, /*isPacked=*/false);
 }
 
 
 std::vector<Type*>FuncTy_31_args;
 FuncTy_31_args.push_back(IntegerType::get(mod->getContext(), 64));
 FunctionType* FuncTy_31 = FunctionType::get(
  /*Result=*/PointerTy_30,
  /*Params=*/FuncTy_31_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_32 = PointerType::get(IntegerType::get(mod->getContext(), 64), 0);
 
 PointerType* PointerTy_33 = PointerType::get(PointerTy_30, 0);
 
 std::vector<Type*>FuncTy_35_args;
 FuncTy_35_args.push_back(IntegerType::get(mod->getContext(), 64));
 FunctionType* FuncTy_35 = FunctionType::get(
  /*Result=*/PointerTy_4,
  /*Params=*/FuncTy_35_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_34 = PointerType::get(FuncTy_35, 0);
 
 PointerType* PointerTy_36 = PointerType::get(StructTy_union_anon, 0);
 
 PointerType* PointerTy_37 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);
 
 PointerType* PointerTy_38 = PointerType::get(StructTy_union_anon_0, 0);
 
 std::vector<Type*>FuncTy_39_args;
 FuncTy_39_args.push_back(PointerTy_4);
 FunctionType* FuncTy_39 = FunctionType::get(
  /*Result=*/PointerTy_30,
  /*Params=*/FuncTy_39_args,
  /*isVarArg=*/false);
 
 std::vector<Type*>FuncTy_40_args;
 FuncTy_40_args.push_back(PointerTy_30);
 FuncTy_40_args.push_back(PointerTy_30);
 FunctionType* FuncTy_40 = FunctionType::get(
  /*Result=*/PointerTy_30,
  /*Params=*/FuncTy_40_args,
  /*isVarArg=*/false);
 
 std::vector<Type*>FuncTy_41_args;
 FunctionType* FuncTy_41 = FunctionType::get(
  /*Result=*/PointerTy_30,
  /*Params=*/FuncTy_41_args,
  /*isVarArg=*/false);
 
 std::vector<Type*>FuncTy_43_args;
 FuncTy_43_args.push_back(PointerTy_25);
 FuncTy_43_args.push_back(PointerTy_32);
 FuncTy_43_args.push_back(PointerTy_3);
 FunctionType* FuncTy_43 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 64),
  /*Params=*/FuncTy_43_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_42 = PointerType::get(FuncTy_43, 0);
 
 PointerType* PointerTy_44 = PointerType::get(FuncTy_39, 0);
 
 std::vector<Type*>FuncTy_46_args;
 FuncTy_46_args.push_back(PointerTy_4);
 FunctionType* FuncTy_46 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_46_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_45 = PointerType::get(FuncTy_46, 0);
 
 PointerType* PointerTy_47 = PointerType::get(FuncTy_31, 0);
 
 std::vector<Type*>FuncTy_49_args;
 FuncTy_49_args.push_back(PointerTy_4);
 FunctionType* FuncTy_49 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 64),
  /*Params=*/FuncTy_49_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_48 = PointerType::get(FuncTy_49, 0);
 
 std::vector<Type*>FuncTy_51_args;
 FuncTy_51_args.push_back(PointerTy_4);
 FuncTy_51_args.push_back(PointerTy_4);
 FunctionType* FuncTy_51 = FunctionType::get(
  /*Result=*/PointerTy_4,
  /*Params=*/FuncTy_51_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_50 = PointerType::get(FuncTy_51, 0);
 
 PointerType* PointerTy_52 = PointerType::get(FuncTy_40, 0);
 
 PointerType* PointerTy_53 = PointerType::get(FuncTy_24, 0);
 
 std::vector<Type*>FuncTy_55_args;
 FuncTy_55_args.push_back(PointerTy_4);
 FuncTy_55_args.push_back(PointerTy_4);
 FunctionType* FuncTy_55 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_55_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_54 = PointerType::get(FuncTy_55, 0);
 
 std::vector<Type*>FuncTy_56_args;
 FuncTy_56_args.push_back(PointerTy_30);
 FunctionType* FuncTy_56 = FunctionType::get(
  /*Result=*/PointerTy_30,
  /*Params=*/FuncTy_56_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_57 = PointerType::get(FuncTy_56, 0);
 
 std::vector<Type*>FuncTy_58_args;
 FunctionType* FuncTy_58 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_58_args,
  /*isVarArg=*/false);
 
 
 // Function Declarations
 
 Function* func_error = mod->getFunction("error");
 if (!func_error) {
 func_error = Function::Create(
  /*Type=*/FuncTy_24,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"error", mod); 
 func_error->setCallingConv(CallingConv::C);
 }
 AttributeSet func_error_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_error_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_error->setAttributes(func_error_PAL);
 
 Function* func_printf = mod->getFunction("printf");
 if (!func_printf) {
 func_printf = Function::Create(
  /*Type=*/FuncTy_27,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"printf", mod); // (external, no body)
 func_printf->setCallingConv(CallingConv::C);
 }
 AttributeSet func_printf_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_printf_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_printf->setAttributes(func_printf_PAL);
 
 Function* func_exit = mod->getFunction("exit");
 if (!func_exit) {
 func_exit = Function::Create(
  /*Type=*/FuncTy_29,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"exit", mod); // (external, no body)
 func_exit->setCallingConv(CallingConv::C);
 }
 AttributeSet func_exit_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_exit_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_exit->setAttributes(func_exit_PAL);
 
 Function* func_makeInt = mod->getFunction("makeInt");
 if (!func_makeInt) {
 func_makeInt = Function::Create(
  /*Type=*/FuncTy_31,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"makeInt", mod); 
 func_makeInt->setCallingConv(CallingConv::C);
 }
 AttributeSet func_makeInt_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_makeInt_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_makeInt->setAttributes(func_makeInt_PAL);
 
 Function* func_malloc = mod->getFunction("malloc");
 if (!func_malloc) {
 func_malloc = Function::Create(
  /*Type=*/FuncTy_35,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"malloc", mod); // (external, no body)
 func_malloc->setCallingConv(CallingConv::C);
 }
 AttributeSet func_malloc_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoAlias);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_malloc_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_malloc->setAttributes(func_malloc_PAL);

Function* func_makeString = mod->getFunction("makeString");
if (!func_makeString) {
func_makeString = Function::Create(
 /*Type=*/FuncTy_39,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"makeString", mod); 
func_makeString->setCallingConv(CallingConv::C);
}
AttributeSet func_makeString_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_makeString_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_makeString->setAttributes(func_makeString_PAL);

Function* func_makeList = mod->getFunction("makeList");
if (!func_makeList) {
func_makeList = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"makeList", mod); 
func_makeList->setCallingConv(CallingConv::C);
}
AttributeSet func_makeList_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_makeList_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_makeList->setAttributes(func_makeList_PAL);

Function* func_readString = mod->getFunction("readString");
if (!func_readString) {
func_readString = Function::Create(
 /*Type=*/FuncTy_41,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"readString", mod); 
func_readString->setCallingConv(CallingConv::C);
}
AttributeSet func_readString_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_readString_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_readString->setAttributes(func_readString_PAL);

Function* func_getline = mod->getFunction("getline");
if (!func_getline) {
func_getline = Function::Create(
 /*Type=*/FuncTy_43,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getline", mod); // (external, no body)
func_getline->setCallingConv(CallingConv::C);
}
AttributeSet func_getline_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_getline_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_getline->setAttributes(func_getline_PAL);

Function* func_readInt = mod->getFunction("readInt");
if (!func_readInt) {
func_readInt = Function::Create(
 /*Type=*/FuncTy_41,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"readInt", mod); 
func_readInt->setCallingConv(CallingConv::C);
}
AttributeSet func_readInt_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_readInt_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_readInt->setAttributes(func_readInt_PAL);

Function* func_atoi = mod->getFunction("atoi");
if (!func_atoi) {
func_atoi = Function::Create(
 /*Type=*/FuncTy_46,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"atoi", mod); // (external, no body)
func_atoi->setCallingConv(CallingConv::C);
}
AttributeSet func_atoi_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadOnly);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_atoi_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_atoi->setAttributes(func_atoi_PAL);

Function* func_add_str = mod->getFunction("add_str");
if (!func_add_str) {
func_add_str = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"add_str", mod); 
func_add_str->setCallingConv(CallingConv::C);
}
AttributeSet func_add_str_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_add_str_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_add_str->setAttributes(func_add_str_PAL);

Function* func_strlen = mod->getFunction("strlen");
if (!func_strlen) {
func_strlen = Function::Create(
 /*Type=*/FuncTy_49,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"strlen", mod); // (external, no body)
func_strlen->setCallingConv(CallingConv::C);
}
AttributeSet func_strlen_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadOnly);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_strlen_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_strlen->setAttributes(func_strlen_PAL);

Function* func_strcpy = mod->getFunction("strcpy");
if (!func_strcpy) {
func_strcpy = Function::Create(
 /*Type=*/FuncTy_51,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"strcpy", mod); // (external, no body)
func_strcpy->setCallingConv(CallingConv::C);
}
AttributeSet func_strcpy_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_strcpy_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_strcpy->setAttributes(func_strcpy_PAL);

Function* func_strcat = mod->getFunction("strcat");
if (!func_strcat) {
func_strcat = Function::Create(
 /*Type=*/FuncTy_51,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"strcat", mod); // (external, no body)
func_strcat->setCallingConv(CallingConv::C);
}
AttributeSet func_strcat_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_strcat_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_strcat->setAttributes(func_strcat_PAL);

Function* func_add_int = mod->getFunction("add_int");
if (!func_add_int) {
func_add_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"add_int", mod); 
func_add_int->setCallingConv(CallingConv::C);
}
AttributeSet func_add_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_add_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_add_int->setAttributes(func_add_int_PAL);

Function* func_add_any = mod->getFunction("add_any");
if (!func_add_any) {
func_add_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"add_any", mod); 
func_add_any->setCallingConv(CallingConv::C);
}
AttributeSet func_add_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_add_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_add_any->setAttributes(func_add_any_PAL);

Function* func_eq_int = mod->getFunction("eq_int");
if (!func_eq_int) {
func_eq_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"eq_int", mod); 
func_eq_int->setCallingConv(CallingConv::C);
}
AttributeSet func_eq_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_eq_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_eq_int->setAttributes(func_eq_int_PAL);

Function* func_eq_str = mod->getFunction("eq_str");
if (!func_eq_str) {
func_eq_str = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"eq_str", mod); 
func_eq_str->setCallingConv(CallingConv::C);
}
AttributeSet func_eq_str_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_eq_str_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_eq_str->setAttributes(func_eq_str_PAL);

Function* func_strcmp = mod->getFunction("strcmp");
if (!func_strcmp) {
func_strcmp = Function::Create(
 /*Type=*/FuncTy_55,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"strcmp", mod); // (external, no body)
func_strcmp->setCallingConv(CallingConv::C);
}
AttributeSet func_strcmp_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadOnly);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_strcmp_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_strcmp->setAttributes(func_strcmp_PAL);

Function* func_eq_any = mod->getFunction("eq_any");
if (!func_eq_any) {
func_eq_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"eq_any", mod); 
func_eq_any->setCallingConv(CallingConv::C);
}
AttributeSet func_eq_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_eq_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_eq_any->setAttributes(func_eq_any_PAL);

Function* func_neq_int = mod->getFunction("neq_int");
if (!func_neq_int) {
func_neq_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"neq_int", mod); 
func_neq_int->setCallingConv(CallingConv::C);
}
AttributeSet func_neq_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_neq_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_neq_int->setAttributes(func_neq_int_PAL);

Function* func_neq_str = mod->getFunction("neq_str");
if (!func_neq_str) {
func_neq_str = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"neq_str", mod); 
func_neq_str->setCallingConv(CallingConv::C);
}
AttributeSet func_neq_str_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_neq_str_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_neq_str->setAttributes(func_neq_str_PAL);

Function* func_neq_any = mod->getFunction("neq_any");
if (!func_neq_any) {
func_neq_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"neq_any", mod); 
func_neq_any->setCallingConv(CallingConv::C);
}
AttributeSet func_neq_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_neq_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_neq_any->setAttributes(func_neq_any_PAL);

Function* func_sub_int = mod->getFunction("sub_int");
if (!func_sub_int) {
func_sub_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"sub_int", mod); 
func_sub_int->setCallingConv(CallingConv::C);
}
AttributeSet func_sub_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_sub_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_sub_int->setAttributes(func_sub_int_PAL);

Function* func_gt_int = mod->getFunction("gt_int");
if (!func_gt_int) {
func_gt_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"gt_int", mod); 
func_gt_int->setCallingConv(CallingConv::C);
}
AttributeSet func_gt_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_gt_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_gt_int->setAttributes(func_gt_int_PAL);

Function* func_geq_int = mod->getFunction("geq_int");
if (!func_geq_int) {
func_geq_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"geq_int", mod); 
func_geq_int->setCallingConv(CallingConv::C);
}
AttributeSet func_geq_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_geq_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_geq_int->setAttributes(func_geq_int_PAL);

Function* func_lt_int = mod->getFunction("lt_int");
if (!func_lt_int) {
func_lt_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"lt_int", mod); 
func_lt_int->setCallingConv(CallingConv::C);
}
AttributeSet func_lt_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_lt_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_lt_int->setAttributes(func_lt_int_PAL);

Function* func_leq_int = mod->getFunction("leq_int");
if (!func_leq_int) {
func_leq_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"leq_int", mod); 
func_leq_int->setCallingConv(CallingConv::C);
}
AttributeSet func_leq_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_leq_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_leq_int->setAttributes(func_leq_int_PAL);

Function* func_div_int = mod->getFunction("div_int");
if (!func_div_int) {
func_div_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"div_int", mod); 
func_div_int->setCallingConv(CallingConv::C);
}
AttributeSet func_div_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_div_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_div_int->setAttributes(func_div_int_PAL);

Function* func_mul_int = mod->getFunction("mul_int");
if (!func_mul_int) {
func_mul_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"mul_int", mod); 
func_mul_int->setCallingConv(CallingConv::C);
}
AttributeSet func_mul_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_mul_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_mul_int->setAttributes(func_mul_int_PAL);

Function* func_and_int = mod->getFunction("and_int");
if (!func_and_int) {
func_and_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"and_int", mod); 
func_and_int->setCallingConv(CallingConv::C);
}
AttributeSet func_and_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_and_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_and_int->setAttributes(func_and_int_PAL);

Function* func_or_int = mod->getFunction("or_int");
if (!func_or_int) {
func_or_int = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"or_int", mod); 
func_or_int->setCallingConv(CallingConv::C);
}
AttributeSet func_or_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_or_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_or_int->setAttributes(func_or_int_PAL);

Function* func_sub_any = mod->getFunction("sub_any");
if (!func_sub_any) {
func_sub_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"sub_any", mod); 
func_sub_any->setCallingConv(CallingConv::C);
}
AttributeSet func_sub_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_sub_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_sub_any->setAttributes(func_sub_any_PAL);

Function* func_gt_any = mod->getFunction("gt_any");
if (!func_gt_any) {
func_gt_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"gt_any", mod); 
func_gt_any->setCallingConv(CallingConv::C);
}
AttributeSet func_gt_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_gt_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_gt_any->setAttributes(func_gt_any_PAL);

Function* func_geq_any = mod->getFunction("geq_any");
if (!func_geq_any) {
func_geq_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"geq_any", mod); 
func_geq_any->setCallingConv(CallingConv::C);
}
AttributeSet func_geq_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_geq_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_geq_any->setAttributes(func_geq_any_PAL);

Function* func_lt_any = mod->getFunction("lt_any");
if (!func_lt_any) {
func_lt_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"lt_any", mod); 
func_lt_any->setCallingConv(CallingConv::C);
}
AttributeSet func_lt_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_lt_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_lt_any->setAttributes(func_lt_any_PAL);

Function* func_leq_any = mod->getFunction("leq_any");
if (!func_leq_any) {
func_leq_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"leq_any", mod); 
func_leq_any->setCallingConv(CallingConv::C);
}
AttributeSet func_leq_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_leq_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_leq_any->setAttributes(func_leq_any_PAL);

Function* func_div_any = mod->getFunction("div_any");
if (!func_div_any) {
func_div_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"div_any", mod); 
func_div_any->setCallingConv(CallingConv::C);
}
AttributeSet func_div_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_div_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_div_any->setAttributes(func_div_any_PAL);

Function* func_mul_any = mod->getFunction("mul_any");
if (!func_mul_any) {
func_mul_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"mul_any", mod); 
func_mul_any->setCallingConv(CallingConv::C);
}
AttributeSet func_mul_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_mul_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_mul_any->setAttributes(func_mul_any_PAL);

Function* func_and_any = mod->getFunction("and_any");
if (!func_and_any) {
func_and_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"and_any", mod); 
func_and_any->setCallingConv(CallingConv::C);
}
AttributeSet func_and_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_and_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_and_any->setAttributes(func_and_any_PAL);

Function* func_or_any = mod->getFunction("or_any");
if (!func_or_any) {
func_or_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"or_any", mod); 
func_or_any->setCallingConv(CallingConv::C);
}
AttributeSet func_or_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_or_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_or_any->setAttributes(func_or_any_PAL);

Function* func_cons_any = mod->getFunction("cons_any");
if (!func_cons_any) {
func_cons_any = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"cons_any", mod); 
func_cons_any->setCallingConv(CallingConv::C);
}
AttributeSet func_cons_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_cons_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_cons_any->setAttributes(func_cons_any_PAL);

Function* func_hd = mod->getFunction("hd");
if (!func_hd) {
func_hd = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"hd", mod); 
func_hd->setCallingConv(CallingConv::C);
}
AttributeSet func_hd_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_hd_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_hd->setAttributes(func_hd_PAL);

Function* func_tl = mod->getFunction("tl");
if (!func_tl) {
func_tl = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"tl", mod); 
func_tl->setCallingConv(CallingConv::C);
}
AttributeSet func_tl_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_tl_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_tl->setAttributes(func_tl_PAL);

Function* func_hd_any = mod->getFunction("hd_any");
if (!func_hd_any) {
func_hd_any = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"hd_any", mod); 
func_hd_any->setCallingConv(CallingConv::C);
}
AttributeSet func_hd_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_hd_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_hd_any->setAttributes(func_hd_any_PAL);

Function* func_tl_any = mod->getFunction("tl_any");
if (!func_tl_any) {
func_tl_any = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"tl_any", mod); 
func_tl_any->setCallingConv(CallingConv::C);
}
AttributeSet func_tl_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_tl_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_tl_any->setAttributes(func_tl_any_PAL);

Function* func_is_nil = mod->getFunction("is_nil");
if (!func_is_nil) {
func_is_nil = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"is_nil", mod); 
func_is_nil->setCallingConv(CallingConv::C);
}
AttributeSet func_is_nil_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_is_nil_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_is_nil->setAttributes(func_is_nil_PAL);

Function* func_print_int = mod->getFunction("print_int");
if (!func_print_int) {
func_print_int = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"print_int", mod); 
func_print_int->setCallingConv(CallingConv::C);
}
AttributeSet func_print_int_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_print_int_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_print_int->setAttributes(func_print_int_PAL);

Function* func_print_str = mod->getFunction("print_str");
if (!func_print_str) {
func_print_str = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"print_str", mod); 
func_print_str->setCallingConv(CallingConv::C);
}
AttributeSet func_print_str_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_print_str_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_print_str->setAttributes(func_print_str_PAL);

Function* func_print_list = mod->getFunction("print_list");
if (!func_print_list) {
func_print_list = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"print_list", mod); 
func_print_list->setCallingConv(CallingConv::C);
}
AttributeSet func_print_list_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_print_list_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_print_list->setAttributes(func_print_list_PAL);

Function* func_free = mod->getFunction("free");
if (!func_free) {
func_free = Function::Create(
 /*Type=*/FuncTy_24,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"free", mod); // (external, no body)
func_free->setCallingConv(CallingConv::C);
}
AttributeSet func_free_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_free_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_free->setAttributes(func_free_PAL);

Function* func_print_any = mod->getFunction("print_any");
if (!func_print_any) {
func_print_any = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"print_any", mod); 
func_print_any->setCallingConv(CallingConv::C);
}
AttributeSet func_print_any_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_print_any_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_print_any->setAttributes(func_print_any_PAL);

Function* func_main = mod->getFunction("main");
if (!func_main) {
func_main = Function::Create(
 /*Type=*/FuncTy_58,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"main", mod); 
func_main->setCallingConv(CallingConv::C);
}
AttributeSet func_main_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_main_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_main->setAttributes(func_main_PAL);

// Global Variable Declarations


GlobalVariable* gvar_array__str = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_0,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str");
gvar_array__str->setAlignment(1);

GlobalVariable* gvar_ptr_stdin = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/PointerTy_3,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"stdin");
gvar_ptr_stdin->setAlignment(8);

GlobalVariable* gvar_array__str_1 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_8,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.1");
gvar_array__str_1->setAlignment(1);

GlobalVariable* gvar_array__str_2 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_10,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.2");
gvar_array__str_2->setAlignment(1);

GlobalVariable* gvar_array__str_3 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_12,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.3");
gvar_array__str_3->setAlignment(1);

GlobalVariable* gvar_array__str_4 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_14,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.4");
gvar_array__str_4->setAlignment(1);

GlobalVariable* gvar_array__str_5 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_16,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.5");
gvar_array__str_5->setAlignment(1);

GlobalVariable* gvar_array__str_6 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_18,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.6");
gvar_array__str_6->setAlignment(1);

GlobalVariable* gvar_array__str_7 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_18,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.7");
gvar_array__str_7->setAlignment(1);

GlobalVariable* gvar_array__str_8 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_20,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.8");
gvar_array__str_8->setAlignment(1);

GlobalVariable* gvar_array__str_9 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_22,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.9");
gvar_array__str_9->setAlignment(1);

GlobalVariable* gvar_array__str_10 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_0,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str.10");
gvar_array__str_10->setAlignment(1);

// Constant Definitions
Constant *const_array_59 = ConstantDataArray::getString(mod->getContext(), "%s\x0A", true);
Constant *const_array_60 = ConstantDataArray::getString(mod->getContext(), "Binop can only be applied to expressions of same type", true);
Constant *const_array_61 = ConstantDataArray::getString(mod->getContext(), "not int", true);
Constant *const_array_62 = ConstantDataArray::getString(mod->getContext(), "not list", true);
Constant *const_array_63 = ConstantDataArray::getString(mod->getContext(), "%lld\x0A", true);
Constant *const_array_64 = ConstantDataArray::getString(mod->getContext(), "[", true);
Constant *const_array_65 = ConstantDataArray::getString(mod->getContext(), ", ", true);
Constant *const_array_66 = ConstantDataArray::getString(mod->getContext(), "]\x0A", true);
Constant *const_array_67 = ConstantDataArray::getString(mod->getContext(), "Nil\x0A", true);
Constant *const_array_68 = ConstantDataArray::getString(mod->getContext(), "what the fuck\x0A", true);
Constant *const_array_69 = ConstantDataArray::getString(mod->getContext(), "hi\x0A", true);
ConstantInt* const_int32_70 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
std::vector<Constant*> const_ptr_71_indices;
ConstantInt* const_int32_72 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
const_ptr_71_indices.push_back(const_int32_72);
const_ptr_71_indices.push_back(const_int32_72);
Constant* const_ptr_71 = ConstantExpr::getGetElementPtr(gvar_array__str, const_ptr_71_indices);
ConstantInt* const_int32_73 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("-1"), 10));
ConstantInt* const_int64_74 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("16"), 10));
ConstantInt* const_int32_75 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2"), 10));
ConstantPointerNull* const_ptr_76 = ConstantPointerNull::get(PointerTy_32);
ConstantInt* const_int64_77 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("1"), 10));
std::vector<Constant*> const_ptr_78_indices;
const_ptr_78_indices.push_back(const_int32_72);
const_ptr_78_indices.push_back(const_int32_72);
Constant* const_ptr_78 = ConstantExpr::getGetElementPtr(gvar_array__str_1, const_ptr_78_indices);
ConstantPointerNull* const_ptr_79 = ConstantPointerNull::get(PointerTy_30);
ConstantInt* const_int1_80 = ConstantInt::get(mod->getContext(), APInt(1, StringRef("-1"), 10));
std::vector<Constant*> const_ptr_81_indices;
const_ptr_81_indices.push_back(const_int32_72);
const_ptr_81_indices.push_back(const_int32_72);
Constant* const_ptr_81 = ConstantExpr::getGetElementPtr(gvar_array__str_2, const_ptr_81_indices);
ConstantInt* const_int64_82 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("4"), 10));
std::vector<Constant*> const_ptr_83_indices;
const_ptr_83_indices.push_back(const_int32_72);
const_ptr_83_indices.push_back(const_int32_72);
Constant* const_ptr_83 = ConstantExpr::getGetElementPtr(gvar_array__str_3, const_ptr_83_indices);
std::vector<Constant*> const_ptr_84_indices;
const_ptr_84_indices.push_back(const_int32_72);
const_ptr_84_indices.push_back(const_int32_72);
Constant* const_ptr_84 = ConstantExpr::getGetElementPtr(gvar_array__str_4, const_ptr_84_indices);
ConstantInt* const_int64_85 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("0"), 10));
std::vector<Constant*> const_ptr_86_indices;
const_ptr_86_indices.push_back(const_int32_72);
const_ptr_86_indices.push_back(const_int32_72);
Constant* const_ptr_86 = ConstantExpr::getGetElementPtr(gvar_array__str_5, const_ptr_86_indices);
std::vector<Constant*> const_ptr_87_indices;
const_ptr_87_indices.push_back(const_int32_72);
const_ptr_87_indices.push_back(const_int32_72);
Constant* const_ptr_87 = ConstantExpr::getGetElementPtr(gvar_array__str_6, const_ptr_87_indices);
std::vector<Constant*> const_ptr_88_indices;
const_ptr_88_indices.push_back(const_int32_72);
const_ptr_88_indices.push_back(const_int32_72);
Constant* const_ptr_88 = ConstantExpr::getGetElementPtr(gvar_array__str_7, const_ptr_88_indices);
std::vector<Constant*> const_ptr_89_indices;
const_ptr_89_indices.push_back(const_int32_72);
const_ptr_89_indices.push_back(const_int32_72);
Constant* const_ptr_89 = ConstantExpr::getGetElementPtr(gvar_array__str_8, const_ptr_89_indices);
ConstantInt* const_int32_90 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("3"), 10));
std::vector<Constant*> const_ptr_91_indices;
const_ptr_91_indices.push_back(const_int32_72);
const_ptr_91_indices.push_back(const_int32_72);
Constant* const_ptr_91 = ConstantExpr::getGetElementPtr(gvar_array__str_9, const_ptr_91_indices);
std::vector<Constant*> const_ptr_92_indices;
const_ptr_92_indices.push_back(const_int32_72);
const_ptr_92_indices.push_back(const_int32_72);
Constant* const_ptr_92 = ConstantExpr::getGetElementPtr(gvar_array__str_10, const_ptr_92_indices);

// Global Variable Definitions
gvar_array__str->setInitializer(const_array_59);
gvar_array__str_1->setInitializer(const_array_60);
gvar_array__str_2->setInitializer(const_array_61);
gvar_array__str_3->setInitializer(const_array_62);
gvar_array__str_4->setInitializer(const_array_63);
gvar_array__str_5->setInitializer(const_array_64);
gvar_array__str_6->setInitializer(const_array_65);
gvar_array__str_7->setInitializer(const_array_66);
gvar_array__str_8->setInitializer(const_array_67);
gvar_array__str_9->setInitializer(const_array_68);
gvar_array__str_10->setInitializer(const_array_69);

// Function Definitions

// Function: error (func_error)
{
 Function::arg_iterator args = func_error->arg_begin();
 Value* ptr_msg = args++;
 ptr_msg->setName("msg");
 
 BasicBlock* label_93 = BasicBlock::Create(mod->getContext(), "",func_error,0);
 BasicBlock* label_94 = BasicBlock::Create(mod->getContext(), "",func_error,0);
 
 // Block  (label_93)
 AllocaInst* ptr_95 = new AllocaInst(PointerTy_4, "", label_93);
 ptr_95->setAlignment(8);
 StoreInst* void_96 = new StoreInst(ptr_msg, ptr_95, false, label_93);
 void_96->setAlignment(8);
 LoadInst* ptr_97 = new LoadInst(ptr_95, "", false, label_93);
 ptr_97->setAlignment(8);
 std::vector<Value*> int32_98_params;
 int32_98_params.push_back(const_ptr_71);
 int32_98_params.push_back(ptr_97);
 CallInst* int32_98 = CallInst::Create(func_printf, int32_98_params, "", label_93);
 int32_98->setCallingConv(CallingConv::C);
 int32_98->setTailCall(false);
 AttributeSet int32_98_PAL;
 int32_98->setAttributes(int32_98_PAL);
 
 CallInst* void_99 = CallInst::Create(func_exit, const_int32_73, "", label_93);
 void_99->setCallingConv(CallingConv::C);
 void_99->setTailCall(false);
 AttributeSet void_99_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_99_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_99->setAttributes(void_99_PAL);
 
 new UnreachableInst(mod->getContext(), label_93);
 
 // Block  (label_94)
 ReturnInst::Create(mod->getContext(), label_94);
 
}

// Function: makeInt (func_makeInt)
{
 Function::arg_iterator args = func_makeInt->arg_begin();
 Value* int64_int_val = args++;
 int64_int_val->setName("int_val");
 
 BasicBlock* label_102 = BasicBlock::Create(mod->getContext(), "",func_makeInt,0);
 
 // Block  (label_102)
 AllocaInst* ptr_103 = new AllocaInst(IntegerType::get(mod->getContext(), 64), "", label_102);
 ptr_103->setAlignment(8);
 AllocaInst* ptr_int_obj = new AllocaInst(PointerTy_30, "int_obj", label_102);
 ptr_int_obj->setAlignment(8);
 StoreInst* void_104 = new StoreInst(int64_int_val, ptr_103, false, label_102);
 void_104->setAlignment(8);
 CallInst* ptr_105 = CallInst::Create(func_malloc, const_int64_74, "", label_102);
 ptr_105->setCallingConv(CallingConv::C);
 ptr_105->setTailCall(false);
 AttributeSet ptr_105_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoAlias);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_105_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_105->setAttributes(ptr_105_PAL);

CastInst* ptr_106 = new BitCastInst(ptr_105, PointerTy_30, "", label_102);
StoreInst* void_107 = new StoreInst(ptr_106, ptr_int_obj, false, label_102);
void_107->setAlignment(8);
LoadInst* ptr_108 = new LoadInst(ptr_int_obj, "", false, label_102);
ptr_108->setAlignment(8);
GetElementPtrInst* ptr_109 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_108, {
 const_int32_72, 
 const_int32_72
}, "", label_102);
CastInst* ptr_110 = new BitCastInst(ptr_109, PointerTy_37, "", label_102);
StoreInst* void_111 = new StoreInst(const_int32_70, ptr_110, false, label_102);
void_111->setAlignment(8);
LoadInst* int64_112 = new LoadInst(ptr_103, "", false, label_102);
int64_112->setAlignment(8);
LoadInst* ptr_113 = new LoadInst(ptr_int_obj, "", false, label_102);
ptr_113->setAlignment(8);
GetElementPtrInst* ptr_114 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_113, {
 const_int32_72, 
 const_int32_70
}, "", label_102);
CastInst* ptr_115 = new BitCastInst(ptr_114, PointerTy_32, "", label_102);
StoreInst* void_116 = new StoreInst(int64_112, ptr_115, false, label_102);
void_116->setAlignment(8);
LoadInst* ptr_117 = new LoadInst(ptr_int_obj, "", false, label_102);
ptr_117->setAlignment(8);
ReturnInst::Create(mod->getContext(), ptr_117, label_102);

}

// Function: makeString (func_makeString)
{
 Function::arg_iterator args = func_makeString->arg_begin();
 Value* ptr_str = args++;
 ptr_str->setName("str");
 
 BasicBlock* label_119 = BasicBlock::Create(mod->getContext(), "",func_makeString,0);
 
 // Block  (label_119)
 AllocaInst* ptr_120 = new AllocaInst(PointerTy_4, "", label_119);
 ptr_120->setAlignment(8);
 AllocaInst* ptr_str_obj = new AllocaInst(PointerTy_30, "str_obj", label_119);
 ptr_str_obj->setAlignment(8);
 StoreInst* void_121 = new StoreInst(ptr_str, ptr_120, false, label_119);
 void_121->setAlignment(8);
 CallInst* ptr_122 = CallInst::Create(func_malloc, const_int64_74, "", label_119);
 ptr_122->setCallingConv(CallingConv::C);
 ptr_122->setTailCall(false);
 AttributeSet ptr_122_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoAlias);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_122_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_122->setAttributes(ptr_122_PAL);

CastInst* ptr_123 = new BitCastInst(ptr_122, PointerTy_30, "", label_119);
StoreInst* void_124 = new StoreInst(ptr_123, ptr_str_obj, false, label_119);
void_124->setAlignment(8);
LoadInst* ptr_125 = new LoadInst(ptr_120, "", false, label_119);
ptr_125->setAlignment(8);
LoadInst* ptr_126 = new LoadInst(ptr_str_obj, "", false, label_119);
ptr_126->setAlignment(8);
GetElementPtrInst* ptr_127 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_126, {
 const_int32_72, 
 const_int32_70
}, "", label_119);
CastInst* ptr_128 = new BitCastInst(ptr_127, PointerTy_25, "", label_119);
StoreInst* void_129 = new StoreInst(ptr_125, ptr_128, false, label_119);
void_129->setAlignment(8);
LoadInst* ptr_130 = new LoadInst(ptr_str_obj, "", false, label_119);
ptr_130->setAlignment(8);
GetElementPtrInst* ptr_131 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_130, {
 const_int32_72, 
 const_int32_72
}, "", label_119);
CastInst* ptr_132 = new BitCastInst(ptr_131, PointerTy_37, "", label_119);
StoreInst* void_133 = new StoreInst(const_int32_75, ptr_132, false, label_119);
void_133->setAlignment(8);
LoadInst* ptr_134 = new LoadInst(ptr_str_obj, "", false, label_119);
ptr_134->setAlignment(8);
ReturnInst::Create(mod->getContext(), ptr_134, label_119);

}

// Function: makeList (func_makeList)
{
 Function::arg_iterator args = func_makeList->arg_begin();
 Value* ptr_hd = args++;
 ptr_hd->setName("hd");
 Value* ptr_tl = args++;
 ptr_tl->setName("tl");
 
 BasicBlock* label_136 = BasicBlock::Create(mod->getContext(), "",func_makeList,0);
 
 // Block  (label_136)
 AllocaInst* ptr_137 = new AllocaInst(PointerTy_30, "", label_136);
 ptr_137->setAlignment(8);
 AllocaInst* ptr_138 = new AllocaInst(PointerTy_30, "", label_136);
 ptr_138->setAlignment(8);
 AllocaInst* ptr_list_obj = new AllocaInst(PointerTy_30, "list_obj", label_136);
 ptr_list_obj->setAlignment(8);
 StoreInst* void_139 = new StoreInst(ptr_hd, ptr_137, false, label_136);
 void_139->setAlignment(8);
 StoreInst* void_140 = new StoreInst(ptr_tl, ptr_138, false, label_136);
 void_140->setAlignment(8);
 CallInst* ptr_141 = CallInst::Create(func_malloc, const_int64_74, "", label_136);
 ptr_141->setCallingConv(CallingConv::C);
 ptr_141->setTailCall(false);
 AttributeSet ptr_141_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoAlias);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_141_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_141->setAttributes(ptr_141_PAL);

CastInst* ptr_142 = new BitCastInst(ptr_141, PointerTy_30, "", label_136);
StoreInst* void_143 = new StoreInst(ptr_142, ptr_list_obj, false, label_136);
void_143->setAlignment(8);
LoadInst* ptr_144 = new LoadInst(ptr_137, "", false, label_136);
ptr_144->setAlignment(8);
LoadInst* ptr_145 = new LoadInst(ptr_list_obj, "", false, label_136);
ptr_145->setAlignment(8);
GetElementPtrInst* ptr_146 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_145, {
 const_int32_72, 
 const_int32_72
}, "", label_136);
CastInst* ptr_147 = new BitCastInst(ptr_146, PointerTy_33, "", label_136);
StoreInst* void_148 = new StoreInst(ptr_144, ptr_147, false, label_136);
void_148->setAlignment(8);
LoadInst* ptr_149 = new LoadInst(ptr_138, "", false, label_136);
ptr_149->setAlignment(8);
LoadInst* ptr_150 = new LoadInst(ptr_list_obj, "", false, label_136);
ptr_150->setAlignment(8);
GetElementPtrInst* ptr_151 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_150, {
 const_int32_72, 
 const_int32_70
}, "", label_136);
CastInst* ptr_152 = new BitCastInst(ptr_151, PointerTy_33, "", label_136);
StoreInst* void_153 = new StoreInst(ptr_149, ptr_152, false, label_136);
void_153->setAlignment(8);
LoadInst* ptr_154 = new LoadInst(ptr_list_obj, "", false, label_136);
ptr_154->setAlignment(8);
ReturnInst::Create(mod->getContext(), ptr_154, label_136);

}

// Function: readString (func_readString)
{
 
 BasicBlock* label_156 = BasicBlock::Create(mod->getContext(), "",func_readString,0);
 
 // Block  (label_156)
 AllocaInst* ptr_input = new AllocaInst(PointerTy_4, "input", label_156);
 ptr_input->setAlignment(8);
 LoadInst* ptr_157 = new LoadInst(gvar_ptr_stdin, "", false, label_156);
 ptr_157->setAlignment(8);
 std::vector<Value*> int64_158_params;
 int64_158_params.push_back(ptr_input);
 int64_158_params.push_back(const_ptr_76);
 int64_158_params.push_back(ptr_157);
 CallInst* int64_158 = CallInst::Create(func_getline, int64_158_params, "", label_156);
 int64_158->setCallingConv(CallingConv::C);
 int64_158->setTailCall(false);
 AttributeSet int64_158_PAL;
 int64_158->setAttributes(int64_158_PAL);
 
 LoadInst* ptr_159 = new LoadInst(ptr_input, "", false, label_156);
 ptr_159->setAlignment(8);
 CallInst* ptr_160 = CallInst::Create(func_makeString, ptr_159, "", label_156);
 ptr_160->setCallingConv(CallingConv::C);
 ptr_160->setTailCall(false);
 AttributeSet ptr_160_PAL;
 ptr_160->setAttributes(ptr_160_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_160, label_156);
 
}

// Function: readInt (func_readInt)
{
 
 BasicBlock* label_162 = BasicBlock::Create(mod->getContext(), "",func_readInt,0);
 
 // Block  (label_162)
 AllocaInst* ptr_input_163 = new AllocaInst(PointerTy_4, "input", label_162);
 ptr_input_163->setAlignment(8);
 LoadInst* ptr_164 = new LoadInst(gvar_ptr_stdin, "", false, label_162);
 ptr_164->setAlignment(8);
 std::vector<Value*> int64_165_params;
 int64_165_params.push_back(ptr_input_163);
 int64_165_params.push_back(const_ptr_76);
 int64_165_params.push_back(ptr_164);
 CallInst* int64_165 = CallInst::Create(func_getline, int64_165_params, "", label_162);
 int64_165->setCallingConv(CallingConv::C);
 int64_165->setTailCall(false);
 AttributeSet int64_165_PAL;
 int64_165->setAttributes(int64_165_PAL);
 
 LoadInst* ptr_166 = new LoadInst(ptr_input_163, "", false, label_162);
 ptr_166->setAlignment(8);
 CallInst* int32_167 = CallInst::Create(func_atoi, ptr_166, "", label_162);
 int32_167->setCallingConv(CallingConv::C);
 int32_167->setTailCall(false);
 AttributeSet int32_167_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_167_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_167->setAttributes(int32_167_PAL);
 
 CastInst* int64_168 = new SExtInst(int32_167, IntegerType::get(mod->getContext(), 64), "", label_162);
 CallInst* ptr_169 = CallInst::Create(func_makeInt, int64_168, "", label_162);
 ptr_169->setCallingConv(CallingConv::C);
 ptr_169->setTailCall(false);
 AttributeSet ptr_169_PAL;
 ptr_169->setAttributes(ptr_169_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_169, label_162);
 
}

// Function: add_str (func_add_str)
{
 Function::arg_iterator args = func_add_str->arg_begin();
 Value* ptr_a = args++;
 ptr_a->setName("a");
 Value* ptr_b = args++;
 ptr_b->setName("b");
 
 BasicBlock* label_171 = BasicBlock::Create(mod->getContext(), "",func_add_str,0);
 
 // Block  (label_171)
 AllocaInst* ptr_172 = new AllocaInst(PointerTy_30, "", label_171);
 ptr_172->setAlignment(8);
 AllocaInst* ptr_173 = new AllocaInst(PointerTy_30, "", label_171);
 ptr_173->setAlignment(8);
 AllocaInst* ptr_new_str = new AllocaInst(PointerTy_4, "new_str", label_171);
 ptr_new_str->setAlignment(8);
 StoreInst* void_174 = new StoreInst(ptr_a, ptr_172, false, label_171);
 void_174->setAlignment(8);
 StoreInst* void_175 = new StoreInst(ptr_b, ptr_173, false, label_171);
 void_175->setAlignment(8);
 LoadInst* ptr_176 = new LoadInst(ptr_172, "", false, label_171);
 ptr_176->setAlignment(8);
 GetElementPtrInst* ptr_177 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_176, {
  const_int32_72, 
  const_int32_70
 }, "", label_171);
 CastInst* ptr_178 = new BitCastInst(ptr_177, PointerTy_25, "", label_171);
 LoadInst* ptr_179 = new LoadInst(ptr_178, "", false, label_171);
 ptr_179->setAlignment(8);
 CallInst* int64_180 = CallInst::Create(func_strlen, ptr_179, "", label_171);
 int64_180->setCallingConv(CallingConv::C);
 int64_180->setTailCall(false);
 AttributeSet int64_180_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int64_180_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int64_180->setAttributes(int64_180_PAL);
 
 LoadInst* ptr_181 = new LoadInst(ptr_173, "", false, label_171);
 ptr_181->setAlignment(8);
 GetElementPtrInst* ptr_182 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_181, {
  const_int32_72, 
  const_int32_70
 }, "", label_171);
 CastInst* ptr_183 = new BitCastInst(ptr_182, PointerTy_25, "", label_171);
 LoadInst* ptr_184 = new LoadInst(ptr_183, "", false, label_171);
 ptr_184->setAlignment(8);
 CallInst* int64_185 = CallInst::Create(func_strlen, ptr_184, "", label_171);
 int64_185->setCallingConv(CallingConv::C);
 int64_185->setTailCall(false);
 AttributeSet int64_185_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int64_185_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int64_185->setAttributes(int64_185_PAL);
 
 BinaryOperator* int64_186 = BinaryOperator::Create(Instruction::Add, int64_180, int64_185, "", label_171);
 BinaryOperator* int64_187 = BinaryOperator::Create(Instruction::Add, int64_186, const_int64_77, "", label_171);
 CallInst* ptr_188 = CallInst::Create(func_malloc, int64_187, "", label_171);
 ptr_188->setCallingConv(CallingConv::C);
 ptr_188->setTailCall(false);
 AttributeSet ptr_188_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoAlias);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_188_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_188->setAttributes(ptr_188_PAL);

StoreInst* void_189 = new StoreInst(ptr_188, ptr_new_str, false, label_171);
void_189->setAlignment(8);
LoadInst* ptr_190 = new LoadInst(ptr_new_str, "", false, label_171);
ptr_190->setAlignment(8);
LoadInst* ptr_191 = new LoadInst(ptr_172, "", false, label_171);
ptr_191->setAlignment(8);
GetElementPtrInst* ptr_192 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_191, {
 const_int32_72, 
 const_int32_70
}, "", label_171);
CastInst* ptr_193 = new BitCastInst(ptr_192, PointerTy_25, "", label_171);
LoadInst* ptr_194 = new LoadInst(ptr_193, "", false, label_171);
ptr_194->setAlignment(8);
std::vector<Value*> ptr_195_params;
ptr_195_params.push_back(ptr_190);
ptr_195_params.push_back(ptr_194);
CallInst* ptr_195 = CallInst::Create(func_strcpy, ptr_195_params, "", label_171);
ptr_195->setCallingConv(CallingConv::C);
ptr_195->setTailCall(false);
AttributeSet ptr_195_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_195_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_195->setAttributes(ptr_195_PAL);

LoadInst* ptr_196 = new LoadInst(ptr_new_str, "", false, label_171);
ptr_196->setAlignment(8);
LoadInst* ptr_197 = new LoadInst(ptr_173, "", false, label_171);
ptr_197->setAlignment(8);
GetElementPtrInst* ptr_198 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_197, {
 const_int32_72, 
 const_int32_70
}, "", label_171);
CastInst* ptr_199 = new BitCastInst(ptr_198, PointerTy_25, "", label_171);
LoadInst* ptr_200 = new LoadInst(ptr_199, "", false, label_171);
ptr_200->setAlignment(8);
std::vector<Value*> ptr_201_params;
ptr_201_params.push_back(ptr_196);
ptr_201_params.push_back(ptr_200);
CallInst* ptr_201 = CallInst::Create(func_strcat, ptr_201_params, "", label_171);
ptr_201->setCallingConv(CallingConv::C);
ptr_201->setTailCall(false);
AttributeSet ptr_201_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_201_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_201->setAttributes(ptr_201_PAL);

LoadInst* ptr_202 = new LoadInst(ptr_new_str, "", false, label_171);
ptr_202->setAlignment(8);
CallInst* ptr_203 = CallInst::Create(func_makeString, ptr_202, "", label_171);
ptr_203->setCallingConv(CallingConv::C);
ptr_203->setTailCall(false);
AttributeSet ptr_203_PAL;
ptr_203->setAttributes(ptr_203_PAL);

ReturnInst::Create(mod->getContext(), ptr_203, label_171);

}

// Function: add_int (func_add_int)
{
 Function::arg_iterator args = func_add_int->arg_begin();
 Value* ptr_a_205 = args++;
 ptr_a_205->setName("a");
 Value* ptr_b_206 = args++;
 ptr_b_206->setName("b");
 
 BasicBlock* label_207 = BasicBlock::Create(mod->getContext(), "",func_add_int,0);
 
 // Block  (label_207)
 AllocaInst* ptr_208 = new AllocaInst(PointerTy_30, "", label_207);
 ptr_208->setAlignment(8);
 AllocaInst* ptr_209 = new AllocaInst(PointerTy_30, "", label_207);
 ptr_209->setAlignment(8);
 AllocaInst* ptr_new_val = new AllocaInst(IntegerType::get(mod->getContext(), 64), "new_val", label_207);
 ptr_new_val->setAlignment(8);
 StoreInst* void_210 = new StoreInst(ptr_a_205, ptr_208, false, label_207);
 void_210->setAlignment(8);
 StoreInst* void_211 = new StoreInst(ptr_b_206, ptr_209, false, label_207);
 void_211->setAlignment(8);
 LoadInst* ptr_212 = new LoadInst(ptr_208, "", false, label_207);
 ptr_212->setAlignment(8);
 GetElementPtrInst* ptr_213 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_212, {
  const_int32_72, 
  const_int32_70
 }, "", label_207);
 CastInst* ptr_214 = new BitCastInst(ptr_213, PointerTy_32, "", label_207);
 LoadInst* int64_215 = new LoadInst(ptr_214, "", false, label_207);
 int64_215->setAlignment(8);
 LoadInst* ptr_216 = new LoadInst(ptr_209, "", false, label_207);
 ptr_216->setAlignment(8);
 GetElementPtrInst* ptr_217 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_216, {
  const_int32_72, 
  const_int32_70
 }, "", label_207);
 CastInst* ptr_218 = new BitCastInst(ptr_217, PointerTy_32, "", label_207);
 LoadInst* int64_219 = new LoadInst(ptr_218, "", false, label_207);
 int64_219->setAlignment(8);
 BinaryOperator* int64_220 = BinaryOperator::Create(Instruction::Add, int64_215, int64_219, "", label_207);
 StoreInst* void_221 = new StoreInst(int64_220, ptr_new_val, false, label_207);
 void_221->setAlignment(8);
 LoadInst* int64_222 = new LoadInst(ptr_new_val, "", false, label_207);
 int64_222->setAlignment(8);
 CallInst* ptr_223 = CallInst::Create(func_makeInt, int64_222, "", label_207);
 ptr_223->setCallingConv(CallingConv::C);
 ptr_223->setTailCall(false);
 AttributeSet ptr_223_PAL;
 ptr_223->setAttributes(ptr_223_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_223, label_207);
 
}

// Function: add_any (func_add_any)
{
 Function::arg_iterator args = func_add_any->arg_begin();
 Value* ptr_a_225 = args++;
 ptr_a_225->setName("a");
 Value* ptr_b_226 = args++;
 ptr_b_226->setName("b");
 
 BasicBlock* label_227 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_228 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_229 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_230 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_231 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_232 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_233 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_234 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_235 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 BasicBlock* label_236 = BasicBlock::Create(mod->getContext(), "",func_add_any,0);
 
 // Block  (label_227)
 AllocaInst* ptr_237 = new AllocaInst(PointerTy_30, "", label_227);
 ptr_237->setAlignment(8);
 AllocaInst* ptr_238 = new AllocaInst(PointerTy_30, "", label_227);
 ptr_238->setAlignment(8);
 AllocaInst* ptr_239 = new AllocaInst(PointerTy_30, "", label_227);
 ptr_239->setAlignment(8);
 StoreInst* void_240 = new StoreInst(ptr_a_225, ptr_238, false, label_227);
 void_240->setAlignment(8);
 StoreInst* void_241 = new StoreInst(ptr_b_226, ptr_239, false, label_227);
 void_241->setAlignment(8);
 LoadInst* ptr_242 = new LoadInst(ptr_238, "", false, label_227);
 ptr_242->setAlignment(8);
 GetElementPtrInst* ptr_243 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_242, {
  const_int32_72, 
  const_int32_72
 }, "", label_227);
 CastInst* ptr_244 = new BitCastInst(ptr_243, PointerTy_37, "", label_227);
 LoadInst* int32_245 = new LoadInst(ptr_244, "", false, label_227);
 int32_245->setAlignment(8);
 ICmpInst* int1_246 = new ICmpInst(*label_227, ICmpInst::ICMP_EQ, int32_245, const_int32_70, "");
 BranchInst::Create(label_228, label_230, int1_246, label_227);
 
 // Block  (label_228)
 LoadInst* ptr_248 = new LoadInst(ptr_239, "", false, label_228);
 ptr_248->setAlignment(8);
 GetElementPtrInst* ptr_249 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_248, {
  const_int32_72, 
  const_int32_72
 }, "", label_228);
 CastInst* ptr_250 = new BitCastInst(ptr_249, PointerTy_37, "", label_228);
 LoadInst* int32_251 = new LoadInst(ptr_250, "", false, label_228);
 int32_251->setAlignment(8);
 ICmpInst* int1_252 = new ICmpInst(*label_228, ICmpInst::ICMP_EQ, int32_251, const_int32_70, "");
 BranchInst::Create(label_229, label_230, int1_252, label_228);
 
 // Block  (label_229)
 LoadInst* ptr_254 = new LoadInst(ptr_238, "", false, label_229);
 ptr_254->setAlignment(8);
 LoadInst* ptr_255 = new LoadInst(ptr_239, "", false, label_229);
 ptr_255->setAlignment(8);
 std::vector<Value*> ptr_256_params;
 ptr_256_params.push_back(ptr_254);
 ptr_256_params.push_back(ptr_255);
 CallInst* ptr_256 = CallInst::Create(func_add_int, ptr_256_params, "", label_229);
 ptr_256->setCallingConv(CallingConv::C);
 ptr_256->setTailCall(false);
 AttributeSet ptr_256_PAL;
 ptr_256->setAttributes(ptr_256_PAL);
 
 StoreInst* void_257 = new StoreInst(ptr_256, ptr_237, false, label_229);
 void_257->setAlignment(8);
 BranchInst::Create(label_236, label_229);
 
 // Block  (label_230)
 LoadInst* ptr_259 = new LoadInst(ptr_238, "", false, label_230);
 ptr_259->setAlignment(8);
 GetElementPtrInst* ptr_260 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_259, {
  const_int32_72, 
  const_int32_72
 }, "", label_230);
 CastInst* ptr_261 = new BitCastInst(ptr_260, PointerTy_37, "", label_230);
 LoadInst* int32_262 = new LoadInst(ptr_261, "", false, label_230);
 int32_262->setAlignment(8);
 ICmpInst* int1_263 = new ICmpInst(*label_230, ICmpInst::ICMP_EQ, int32_262, const_int32_75, "");
 BranchInst::Create(label_231, label_233, int1_263, label_230);
 
 // Block  (label_231)
 LoadInst* ptr_265 = new LoadInst(ptr_239, "", false, label_231);
 ptr_265->setAlignment(8);
 GetElementPtrInst* ptr_266 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_265, {
  const_int32_72, 
  const_int32_72
 }, "", label_231);
 CastInst* ptr_267 = new BitCastInst(ptr_266, PointerTy_37, "", label_231);
 LoadInst* int32_268 = new LoadInst(ptr_267, "", false, label_231);
 int32_268->setAlignment(8);
 ICmpInst* int1_269 = new ICmpInst(*label_231, ICmpInst::ICMP_EQ, int32_268, const_int32_75, "");
 BranchInst::Create(label_232, label_233, int1_269, label_231);
 
 // Block  (label_232)
 LoadInst* ptr_271 = new LoadInst(ptr_238, "", false, label_232);
 ptr_271->setAlignment(8);
 LoadInst* ptr_272 = new LoadInst(ptr_239, "", false, label_232);
 ptr_272->setAlignment(8);
 std::vector<Value*> ptr_273_params;
 ptr_273_params.push_back(ptr_271);
 ptr_273_params.push_back(ptr_272);
 CallInst* ptr_273 = CallInst::Create(func_add_str, ptr_273_params, "", label_232);
 ptr_273->setCallingConv(CallingConv::C);
 ptr_273->setTailCall(false);
 AttributeSet ptr_273_PAL;
 ptr_273->setAttributes(ptr_273_PAL);
 
 StoreInst* void_274 = new StoreInst(ptr_273, ptr_237, false, label_232);
 void_274->setAlignment(8);
 BranchInst::Create(label_236, label_232);
 
 // Block  (label_233)
 CallInst* void_276 = CallInst::Create(func_error, const_ptr_78, "", label_233);
 void_276->setCallingConv(CallingConv::C);
 void_276->setTailCall(false);
 AttributeSet void_276_PAL;
 void_276->setAttributes(void_276_PAL);
 
 BranchInst::Create(label_234, label_233);
 
 // Block  (label_234)
 BranchInst::Create(label_235, label_234);
 
 // Block  (label_235)
 StoreInst* void_279 = new StoreInst(const_ptr_79, ptr_237, false, label_235);
 void_279->setAlignment(8);
 BranchInst::Create(label_236, label_235);
 
 // Block  (label_236)
 LoadInst* ptr_281 = new LoadInst(ptr_237, "", false, label_236);
 ptr_281->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_281, label_236);
 
}

// Function: eq_int (func_eq_int)
{
 Function::arg_iterator args = func_eq_int->arg_begin();
 Value* ptr_a_283 = args++;
 ptr_a_283->setName("a");
 Value* ptr_b_284 = args++;
 ptr_b_284->setName("b");
 
 BasicBlock* label_285 = BasicBlock::Create(mod->getContext(), "",func_eq_int,0);
 
 // Block  (label_285)
 AllocaInst* ptr_286 = new AllocaInst(PointerTy_30, "", label_285);
 ptr_286->setAlignment(8);
 AllocaInst* ptr_287 = new AllocaInst(PointerTy_30, "", label_285);
 ptr_287->setAlignment(8);
 AllocaInst* ptr_new_val_288 = new AllocaInst(IntegerType::get(mod->getContext(), 64), "new_val", label_285);
 ptr_new_val_288->setAlignment(8);
 StoreInst* void_289 = new StoreInst(ptr_a_283, ptr_286, false, label_285);
 void_289->setAlignment(8);
 StoreInst* void_290 = new StoreInst(ptr_b_284, ptr_287, false, label_285);
 void_290->setAlignment(8);
 LoadInst* ptr_291 = new LoadInst(ptr_286, "", false, label_285);
 ptr_291->setAlignment(8);
 GetElementPtrInst* ptr_292 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_291, {
  const_int32_72, 
  const_int32_70
 }, "", label_285);
 CastInst* ptr_293 = new BitCastInst(ptr_292, PointerTy_32, "", label_285);
 LoadInst* int64_294 = new LoadInst(ptr_293, "", false, label_285);
 int64_294->setAlignment(8);
 LoadInst* ptr_295 = new LoadInst(ptr_287, "", false, label_285);
 ptr_295->setAlignment(8);
 GetElementPtrInst* ptr_296 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_295, {
  const_int32_72, 
  const_int32_70
 }, "", label_285);
 CastInst* ptr_297 = new BitCastInst(ptr_296, PointerTy_32, "", label_285);
 LoadInst* int64_298 = new LoadInst(ptr_297, "", false, label_285);
 int64_298->setAlignment(8);
 ICmpInst* int1_299 = new ICmpInst(*label_285, ICmpInst::ICMP_EQ, int64_294, int64_298, "");
 CastInst* int32_300 = new ZExtInst(int1_299, IntegerType::get(mod->getContext(), 32), "", label_285);
 CastInst* int64_301 = new SExtInst(int32_300, IntegerType::get(mod->getContext(), 64), "", label_285);
 StoreInst* void_302 = new StoreInst(int64_301, ptr_new_val_288, false, label_285);
 void_302->setAlignment(8);
 LoadInst* int64_303 = new LoadInst(ptr_new_val_288, "", false, label_285);
 int64_303->setAlignment(8);
 CallInst* ptr_304 = CallInst::Create(func_makeInt, int64_303, "", label_285);
 ptr_304->setCallingConv(CallingConv::C);
 ptr_304->setTailCall(false);
 AttributeSet ptr_304_PAL;
 ptr_304->setAttributes(ptr_304_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_304, label_285);
 
}

// Function: eq_str (func_eq_str)
{
 Function::arg_iterator args = func_eq_str->arg_begin();
 Value* ptr_a_306 = args++;
 ptr_a_306->setName("a");
 Value* ptr_b_307 = args++;
 ptr_b_307->setName("b");
 
 BasicBlock* label_308 = BasicBlock::Create(mod->getContext(), "",func_eq_str,0);
 
 // Block  (label_308)
 AllocaInst* ptr_309 = new AllocaInst(PointerTy_30, "", label_308);
 ptr_309->setAlignment(8);
 AllocaInst* ptr_310 = new AllocaInst(PointerTy_30, "", label_308);
 ptr_310->setAlignment(8);
 AllocaInst* ptr_new_val_311 = new AllocaInst(IntegerType::get(mod->getContext(), 64), "new_val", label_308);
 ptr_new_val_311->setAlignment(8);
 StoreInst* void_312 = new StoreInst(ptr_a_306, ptr_309, false, label_308);
 void_312->setAlignment(8);
 StoreInst* void_313 = new StoreInst(ptr_b_307, ptr_310, false, label_308);
 void_313->setAlignment(8);
 LoadInst* ptr_314 = new LoadInst(ptr_309, "", false, label_308);
 ptr_314->setAlignment(8);
 GetElementPtrInst* ptr_315 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_314, {
  const_int32_72, 
  const_int32_70
 }, "", label_308);
 CastInst* ptr_316 = new BitCastInst(ptr_315, PointerTy_25, "", label_308);
 LoadInst* ptr_317 = new LoadInst(ptr_316, "", false, label_308);
 ptr_317->setAlignment(8);
 LoadInst* ptr_318 = new LoadInst(ptr_310, "", false, label_308);
 ptr_318->setAlignment(8);
 GetElementPtrInst* ptr_319 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_318, {
  const_int32_72, 
  const_int32_70
 }, "", label_308);
 CastInst* ptr_320 = new BitCastInst(ptr_319, PointerTy_25, "", label_308);
 LoadInst* ptr_321 = new LoadInst(ptr_320, "", false, label_308);
 ptr_321->setAlignment(8);
 std::vector<Value*> int32_322_params;
 int32_322_params.push_back(ptr_317);
 int32_322_params.push_back(ptr_321);
 CallInst* int32_322 = CallInst::Create(func_strcmp, int32_322_params, "", label_308);
 int32_322->setCallingConv(CallingConv::C);
 int32_322->setTailCall(false);
 AttributeSet int32_322_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_322_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_322->setAttributes(int32_322_PAL);
 
 CastInst* int64_323 = new SExtInst(int32_322, IntegerType::get(mod->getContext(), 64), "", label_308);
 StoreInst* void_324 = new StoreInst(int64_323, ptr_new_val_311, false, label_308);
 void_324->setAlignment(8);
 LoadInst* int64_325 = new LoadInst(ptr_new_val_311, "", false, label_308);
 int64_325->setAlignment(8);
 CallInst* ptr_326 = CallInst::Create(func_makeInt, int64_325, "", label_308);
 ptr_326->setCallingConv(CallingConv::C);
 ptr_326->setTailCall(false);
 AttributeSet ptr_326_PAL;
 ptr_326->setAttributes(ptr_326_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_326, label_308);
 
}

// Function: eq_any (func_eq_any)
{
 Function::arg_iterator args = func_eq_any->arg_begin();
 Value* ptr_a_328 = args++;
 ptr_a_328->setName("a");
 Value* ptr_b_329 = args++;
 ptr_b_329->setName("b");
 
 BasicBlock* label_330 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_331 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_332 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_333 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_334 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_335 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_336 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_337 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_338 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 BasicBlock* label_339 = BasicBlock::Create(mod->getContext(), "",func_eq_any,0);
 
 // Block  (label_330)
 AllocaInst* ptr_340 = new AllocaInst(PointerTy_30, "", label_330);
 ptr_340->setAlignment(8);
 AllocaInst* ptr_341 = new AllocaInst(PointerTy_30, "", label_330);
 ptr_341->setAlignment(8);
 AllocaInst* ptr_342 = new AllocaInst(PointerTy_30, "", label_330);
 ptr_342->setAlignment(8);
 StoreInst* void_343 = new StoreInst(ptr_a_328, ptr_341, false, label_330);
 void_343->setAlignment(8);
 StoreInst* void_344 = new StoreInst(ptr_b_329, ptr_342, false, label_330);
 void_344->setAlignment(8);
 LoadInst* ptr_345 = new LoadInst(ptr_341, "", false, label_330);
 ptr_345->setAlignment(8);
 GetElementPtrInst* ptr_346 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_345, {
  const_int32_72, 
  const_int32_72
 }, "", label_330);
 CastInst* ptr_347 = new BitCastInst(ptr_346, PointerTy_37, "", label_330);
 LoadInst* int32_348 = new LoadInst(ptr_347, "", false, label_330);
 int32_348->setAlignment(8);
 ICmpInst* int1_349 = new ICmpInst(*label_330, ICmpInst::ICMP_EQ, int32_348, const_int32_70, "");
 BranchInst::Create(label_331, label_333, int1_349, label_330);
 
 // Block  (label_331)
 LoadInst* ptr_351 = new LoadInst(ptr_342, "", false, label_331);
 ptr_351->setAlignment(8);
 GetElementPtrInst* ptr_352 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_351, {
  const_int32_72, 
  const_int32_72
 }, "", label_331);
 CastInst* ptr_353 = new BitCastInst(ptr_352, PointerTy_37, "", label_331);
 LoadInst* int32_354 = new LoadInst(ptr_353, "", false, label_331);
 int32_354->setAlignment(8);
 ICmpInst* int1_355 = new ICmpInst(*label_331, ICmpInst::ICMP_EQ, int32_354, const_int32_70, "");
 BranchInst::Create(label_332, label_333, int1_355, label_331);
 
 // Block  (label_332)
 LoadInst* ptr_357 = new LoadInst(ptr_341, "", false, label_332);
 ptr_357->setAlignment(8);
 LoadInst* ptr_358 = new LoadInst(ptr_342, "", false, label_332);
 ptr_358->setAlignment(8);
 std::vector<Value*> ptr_359_params;
 ptr_359_params.push_back(ptr_357);
 ptr_359_params.push_back(ptr_358);
 CallInst* ptr_359 = CallInst::Create(func_eq_int, ptr_359_params, "", label_332);
 ptr_359->setCallingConv(CallingConv::C);
 ptr_359->setTailCall(false);
 AttributeSet ptr_359_PAL;
 ptr_359->setAttributes(ptr_359_PAL);
 
 StoreInst* void_360 = new StoreInst(ptr_359, ptr_340, false, label_332);
 void_360->setAlignment(8);
 BranchInst::Create(label_339, label_332);
 
 // Block  (label_333)
 LoadInst* ptr_362 = new LoadInst(ptr_341, "", false, label_333);
 ptr_362->setAlignment(8);
 GetElementPtrInst* ptr_363 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_362, {
  const_int32_72, 
  const_int32_72
 }, "", label_333);
 CastInst* ptr_364 = new BitCastInst(ptr_363, PointerTy_37, "", label_333);
 LoadInst* int32_365 = new LoadInst(ptr_364, "", false, label_333);
 int32_365->setAlignment(8);
 ICmpInst* int1_366 = new ICmpInst(*label_333, ICmpInst::ICMP_EQ, int32_365, const_int32_75, "");
 BranchInst::Create(label_334, label_336, int1_366, label_333);
 
 // Block  (label_334)
 LoadInst* ptr_368 = new LoadInst(ptr_342, "", false, label_334);
 ptr_368->setAlignment(8);
 GetElementPtrInst* ptr_369 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_368, {
  const_int32_72, 
  const_int32_72
 }, "", label_334);
 CastInst* ptr_370 = new BitCastInst(ptr_369, PointerTy_37, "", label_334);
 LoadInst* int32_371 = new LoadInst(ptr_370, "", false, label_334);
 int32_371->setAlignment(8);
 ICmpInst* int1_372 = new ICmpInst(*label_334, ICmpInst::ICMP_EQ, int32_371, const_int32_75, "");
 BranchInst::Create(label_335, label_336, int1_372, label_334);
 
 // Block  (label_335)
 LoadInst* ptr_374 = new LoadInst(ptr_341, "", false, label_335);
 ptr_374->setAlignment(8);
 LoadInst* ptr_375 = new LoadInst(ptr_342, "", false, label_335);
 ptr_375->setAlignment(8);
 std::vector<Value*> ptr_376_params;
 ptr_376_params.push_back(ptr_374);
 ptr_376_params.push_back(ptr_375);
 CallInst* ptr_376 = CallInst::Create(func_eq_int, ptr_376_params, "", label_335);
 ptr_376->setCallingConv(CallingConv::C);
 ptr_376->setTailCall(false);
 AttributeSet ptr_376_PAL;
 ptr_376->setAttributes(ptr_376_PAL);
 
 StoreInst* void_377 = new StoreInst(ptr_376, ptr_340, false, label_335);
 void_377->setAlignment(8);
 BranchInst::Create(label_339, label_335);
 
 // Block  (label_336)
 CallInst* void_379 = CallInst::Create(func_error, const_ptr_78, "", label_336);
 void_379->setCallingConv(CallingConv::C);
 void_379->setTailCall(false);
 AttributeSet void_379_PAL;
 void_379->setAttributes(void_379_PAL);
 
 BranchInst::Create(label_337, label_336);
 
 // Block  (label_337)
 BranchInst::Create(label_338, label_337);
 
 // Block  (label_338)
 StoreInst* void_382 = new StoreInst(const_ptr_79, ptr_340, false, label_338);
 void_382->setAlignment(8);
 BranchInst::Create(label_339, label_338);
 
 // Block  (label_339)
 LoadInst* ptr_384 = new LoadInst(ptr_340, "", false, label_339);
 ptr_384->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_384, label_339);
 
}

// Function: neq_int (func_neq_int)
{
 Function::arg_iterator args = func_neq_int->arg_begin();
 Value* ptr_a_386 = args++;
 ptr_a_386->setName("a");
 Value* ptr_b_387 = args++;
 ptr_b_387->setName("b");
 
 BasicBlock* label_388 = BasicBlock::Create(mod->getContext(), "",func_neq_int,0);
 
 // Block  (label_388)
 AllocaInst* ptr_389 = new AllocaInst(PointerTy_30, "", label_388);
 ptr_389->setAlignment(8);
 AllocaInst* ptr_390 = new AllocaInst(PointerTy_30, "", label_388);
 ptr_390->setAlignment(8);
 AllocaInst* ptr_new_val_391 = new AllocaInst(IntegerType::get(mod->getContext(), 64), "new_val", label_388);
 ptr_new_val_391->setAlignment(8);
 StoreInst* void_392 = new StoreInst(ptr_a_386, ptr_389, false, label_388);
 void_392->setAlignment(8);
 StoreInst* void_393 = new StoreInst(ptr_b_387, ptr_390, false, label_388);
 void_393->setAlignment(8);
 LoadInst* ptr_394 = new LoadInst(ptr_389, "", false, label_388);
 ptr_394->setAlignment(8);
 GetElementPtrInst* ptr_395 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_394, {
  const_int32_72, 
  const_int32_70
 }, "", label_388);
 CastInst* ptr_396 = new BitCastInst(ptr_395, PointerTy_32, "", label_388);
 LoadInst* int64_397 = new LoadInst(ptr_396, "", false, label_388);
 int64_397->setAlignment(8);
 LoadInst* ptr_398 = new LoadInst(ptr_390, "", false, label_388);
 ptr_398->setAlignment(8);
 GetElementPtrInst* ptr_399 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_398, {
  const_int32_72, 
  const_int32_70
 }, "", label_388);
 CastInst* ptr_400 = new BitCastInst(ptr_399, PointerTy_32, "", label_388);
 LoadInst* int64_401 = new LoadInst(ptr_400, "", false, label_388);
 int64_401->setAlignment(8);
 ICmpInst* int1_402 = new ICmpInst(*label_388, ICmpInst::ICMP_NE, int64_397, int64_401, "");
 CastInst* int32_403 = new ZExtInst(int1_402, IntegerType::get(mod->getContext(), 32), "", label_388);
 CastInst* int64_404 = new SExtInst(int32_403, IntegerType::get(mod->getContext(), 64), "", label_388);
 StoreInst* void_405 = new StoreInst(int64_404, ptr_new_val_391, false, label_388);
 void_405->setAlignment(8);
 LoadInst* int64_406 = new LoadInst(ptr_new_val_391, "", false, label_388);
 int64_406->setAlignment(8);
 CallInst* ptr_407 = CallInst::Create(func_makeInt, int64_406, "", label_388);
 ptr_407->setCallingConv(CallingConv::C);
 ptr_407->setTailCall(false);
 AttributeSet ptr_407_PAL;
 ptr_407->setAttributes(ptr_407_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_407, label_388);
 
}

// Function: neq_str (func_neq_str)
{
 Function::arg_iterator args = func_neq_str->arg_begin();
 Value* ptr_a_409 = args++;
 ptr_a_409->setName("a");
 Value* ptr_b_410 = args++;
 ptr_b_410->setName("b");
 
 BasicBlock* label_411 = BasicBlock::Create(mod->getContext(), "",func_neq_str,0);
 
 // Block  (label_411)
 AllocaInst* ptr_412 = new AllocaInst(PointerTy_30, "", label_411);
 ptr_412->setAlignment(8);
 AllocaInst* ptr_413 = new AllocaInst(PointerTy_30, "", label_411);
 ptr_413->setAlignment(8);
 AllocaInst* ptr_new_val_414 = new AllocaInst(IntegerType::get(mod->getContext(), 64), "new_val", label_411);
 ptr_new_val_414->setAlignment(8);
 StoreInst* void_415 = new StoreInst(ptr_a_409, ptr_412, false, label_411);
 void_415->setAlignment(8);
 StoreInst* void_416 = new StoreInst(ptr_b_410, ptr_413, false, label_411);
 void_416->setAlignment(8);
 LoadInst* ptr_417 = new LoadInst(ptr_412, "", false, label_411);
 ptr_417->setAlignment(8);
 GetElementPtrInst* ptr_418 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_417, {
  const_int32_72, 
  const_int32_70
 }, "", label_411);
 CastInst* ptr_419 = new BitCastInst(ptr_418, PointerTy_25, "", label_411);
 LoadInst* ptr_420 = new LoadInst(ptr_419, "", false, label_411);
 ptr_420->setAlignment(8);
 LoadInst* ptr_421 = new LoadInst(ptr_413, "", false, label_411);
 ptr_421->setAlignment(8);
 GetElementPtrInst* ptr_422 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_421, {
  const_int32_72, 
  const_int32_70
 }, "", label_411);
 CastInst* ptr_423 = new BitCastInst(ptr_422, PointerTy_25, "", label_411);
 LoadInst* ptr_424 = new LoadInst(ptr_423, "", false, label_411);
 ptr_424->setAlignment(8);
 std::vector<Value*> int32_425_params;
 int32_425_params.push_back(ptr_420);
 int32_425_params.push_back(ptr_424);
 CallInst* int32_425 = CallInst::Create(func_strcmp, int32_425_params, "", label_411);
 int32_425->setCallingConv(CallingConv::C);
 int32_425->setTailCall(false);
 AttributeSet int32_425_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_425_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_425->setAttributes(int32_425_PAL);
 
 ICmpInst* int1_426 = new ICmpInst(*label_411, ICmpInst::ICMP_NE, int32_425, const_int32_72, "");
 BinaryOperator* int1_427 = BinaryOperator::Create(Instruction::Xor, int1_426, const_int1_80, "", label_411);
 CastInst* int32_428 = new ZExtInst(int1_427, IntegerType::get(mod->getContext(), 32), "", label_411);
 CastInst* int64_429 = new SExtInst(int32_428, IntegerType::get(mod->getContext(), 64), "", label_411);
 StoreInst* void_430 = new StoreInst(int64_429, ptr_new_val_414, false, label_411);
 void_430->setAlignment(8);
 LoadInst* int64_431 = new LoadInst(ptr_new_val_414, "", false, label_411);
 int64_431->setAlignment(8);
 CallInst* ptr_432 = CallInst::Create(func_makeInt, int64_431, "", label_411);
 ptr_432->setCallingConv(CallingConv::C);
 ptr_432->setTailCall(false);
 AttributeSet ptr_432_PAL;
 ptr_432->setAttributes(ptr_432_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_432, label_411);
 
}

// Function: neq_any (func_neq_any)
{
 Function::arg_iterator args = func_neq_any->arg_begin();
 Value* ptr_a_434 = args++;
 ptr_a_434->setName("a");
 Value* ptr_b_435 = args++;
 ptr_b_435->setName("b");
 
 BasicBlock* label_436 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_437 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_438 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_439 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_440 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_441 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_442 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_443 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_444 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 BasicBlock* label_445 = BasicBlock::Create(mod->getContext(), "",func_neq_any,0);
 
 // Block  (label_436)
 AllocaInst* ptr_446 = new AllocaInst(PointerTy_30, "", label_436);
 ptr_446->setAlignment(8);
 AllocaInst* ptr_447 = new AllocaInst(PointerTy_30, "", label_436);
 ptr_447->setAlignment(8);
 AllocaInst* ptr_448 = new AllocaInst(PointerTy_30, "", label_436);
 ptr_448->setAlignment(8);
 StoreInst* void_449 = new StoreInst(ptr_a_434, ptr_447, false, label_436);
 void_449->setAlignment(8);
 StoreInst* void_450 = new StoreInst(ptr_b_435, ptr_448, false, label_436);
 void_450->setAlignment(8);
 LoadInst* ptr_451 = new LoadInst(ptr_447, "", false, label_436);
 ptr_451->setAlignment(8);
 GetElementPtrInst* ptr_452 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_451, {
  const_int32_72, 
  const_int32_72
 }, "", label_436);
 CastInst* ptr_453 = new BitCastInst(ptr_452, PointerTy_37, "", label_436);
 LoadInst* int32_454 = new LoadInst(ptr_453, "", false, label_436);
 int32_454->setAlignment(8);
 ICmpInst* int1_455 = new ICmpInst(*label_436, ICmpInst::ICMP_EQ, int32_454, const_int32_70, "");
 BranchInst::Create(label_437, label_439, int1_455, label_436);
 
 // Block  (label_437)
 LoadInst* ptr_457 = new LoadInst(ptr_448, "", false, label_437);
 ptr_457->setAlignment(8);
 GetElementPtrInst* ptr_458 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_457, {
  const_int32_72, 
  const_int32_72
 }, "", label_437);
 CastInst* ptr_459 = new BitCastInst(ptr_458, PointerTy_37, "", label_437);
 LoadInst* int32_460 = new LoadInst(ptr_459, "", false, label_437);
 int32_460->setAlignment(8);
 ICmpInst* int1_461 = new ICmpInst(*label_437, ICmpInst::ICMP_EQ, int32_460, const_int32_70, "");
 BranchInst::Create(label_438, label_439, int1_461, label_437);
 
 // Block  (label_438)
 LoadInst* ptr_463 = new LoadInst(ptr_447, "", false, label_438);
 ptr_463->setAlignment(8);
 LoadInst* ptr_464 = new LoadInst(ptr_448, "", false, label_438);
 ptr_464->setAlignment(8);
 std::vector<Value*> ptr_465_params;
 ptr_465_params.push_back(ptr_463);
 ptr_465_params.push_back(ptr_464);
 CallInst* ptr_465 = CallInst::Create(func_neq_int, ptr_465_params, "", label_438);
 ptr_465->setCallingConv(CallingConv::C);
 ptr_465->setTailCall(false);
 AttributeSet ptr_465_PAL;
 ptr_465->setAttributes(ptr_465_PAL);
 
 StoreInst* void_466 = new StoreInst(ptr_465, ptr_446, false, label_438);
 void_466->setAlignment(8);
 BranchInst::Create(label_445, label_438);
 
 // Block  (label_439)
 LoadInst* ptr_468 = new LoadInst(ptr_447, "", false, label_439);
 ptr_468->setAlignment(8);
 GetElementPtrInst* ptr_469 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_468, {
  const_int32_72, 
  const_int32_72
 }, "", label_439);
 CastInst* ptr_470 = new BitCastInst(ptr_469, PointerTy_37, "", label_439);
 LoadInst* int32_471 = new LoadInst(ptr_470, "", false, label_439);
 int32_471->setAlignment(8);
 ICmpInst* int1_472 = new ICmpInst(*label_439, ICmpInst::ICMP_EQ, int32_471, const_int32_75, "");
 BranchInst::Create(label_440, label_442, int1_472, label_439);
 
 // Block  (label_440)
 LoadInst* ptr_474 = new LoadInst(ptr_448, "", false, label_440);
 ptr_474->setAlignment(8);
 GetElementPtrInst* ptr_475 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_474, {
  const_int32_72, 
  const_int32_72
 }, "", label_440);
 CastInst* ptr_476 = new BitCastInst(ptr_475, PointerTy_37, "", label_440);
 LoadInst* int32_477 = new LoadInst(ptr_476, "", false, label_440);
 int32_477->setAlignment(8);
 ICmpInst* int1_478 = new ICmpInst(*label_440, ICmpInst::ICMP_EQ, int32_477, const_int32_75, "");
 BranchInst::Create(label_441, label_442, int1_478, label_440);
 
 // Block  (label_441)
 LoadInst* ptr_480 = new LoadInst(ptr_447, "", false, label_441);
 ptr_480->setAlignment(8);
 LoadInst* ptr_481 = new LoadInst(ptr_448, "", false, label_441);
 ptr_481->setAlignment(8);
 std::vector<Value*> ptr_482_params;
 ptr_482_params.push_back(ptr_480);
 ptr_482_params.push_back(ptr_481);
 CallInst* ptr_482 = CallInst::Create(func_neq_int, ptr_482_params, "", label_441);
 ptr_482->setCallingConv(CallingConv::C);
 ptr_482->setTailCall(false);
 AttributeSet ptr_482_PAL;
 ptr_482->setAttributes(ptr_482_PAL);
 
 StoreInst* void_483 = new StoreInst(ptr_482, ptr_446, false, label_441);
 void_483->setAlignment(8);
 BranchInst::Create(label_445, label_441);
 
 // Block  (label_442)
 CallInst* void_485 = CallInst::Create(func_error, const_ptr_78, "", label_442);
 void_485->setCallingConv(CallingConv::C);
 void_485->setTailCall(false);
 AttributeSet void_485_PAL;
 void_485->setAttributes(void_485_PAL);
 
 BranchInst::Create(label_443, label_442);
 
 // Block  (label_443)
 BranchInst::Create(label_444, label_443);
 
 // Block  (label_444)
 StoreInst* void_488 = new StoreInst(const_ptr_79, ptr_446, false, label_444);
 void_488->setAlignment(8);
 BranchInst::Create(label_445, label_444);
 
 // Block  (label_445)
 LoadInst* ptr_490 = new LoadInst(ptr_446, "", false, label_445);
 ptr_490->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_490, label_445);
 
}

// Function: sub_int (func_sub_int)
{
 Function::arg_iterator args = func_sub_int->arg_begin();
 Value* ptr_a_492 = args++;
 ptr_a_492->setName("a");
 Value* ptr_b_493 = args++;
 ptr_b_493->setName("b");
 
 BasicBlock* label_494 = BasicBlock::Create(mod->getContext(), "",func_sub_int,0);
 
 // Block  (label_494)
 AllocaInst* ptr_495 = new AllocaInst(PointerTy_30, "", label_494);
 ptr_495->setAlignment(8);
 AllocaInst* ptr_496 = new AllocaInst(PointerTy_30, "", label_494);
 ptr_496->setAlignment(8);
 StoreInst* void_497 = new StoreInst(ptr_a_492, ptr_495, false, label_494);
 void_497->setAlignment(8);
 StoreInst* void_498 = new StoreInst(ptr_b_493, ptr_496, false, label_494);
 void_498->setAlignment(8);
 LoadInst* ptr_499 = new LoadInst(ptr_495, "", false, label_494);
 ptr_499->setAlignment(8);
 GetElementPtrInst* ptr_500 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_499, {
  const_int32_72, 
  const_int32_70
 }, "", label_494);
 CastInst* ptr_501 = new BitCastInst(ptr_500, PointerTy_32, "", label_494);
 LoadInst* int64_502 = new LoadInst(ptr_501, "", false, label_494);
 int64_502->setAlignment(8);
 LoadInst* ptr_503 = new LoadInst(ptr_496, "", false, label_494);
 ptr_503->setAlignment(8);
 GetElementPtrInst* ptr_504 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_503, {
  const_int32_72, 
  const_int32_70
 }, "", label_494);
 CastInst* ptr_505 = new BitCastInst(ptr_504, PointerTy_32, "", label_494);
 LoadInst* int64_506 = new LoadInst(ptr_505, "", false, label_494);
 int64_506->setAlignment(8);
 BinaryOperator* int64_507 = BinaryOperator::Create(Instruction::Sub, int64_502, int64_506, "", label_494);
 CallInst* ptr_508 = CallInst::Create(func_makeInt, int64_507, "", label_494);
 ptr_508->setCallingConv(CallingConv::C);
 ptr_508->setTailCall(false);
 AttributeSet ptr_508_PAL;
 ptr_508->setAttributes(ptr_508_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_508, label_494);
 
}

// Function: gt_int (func_gt_int)
{
 Function::arg_iterator args = func_gt_int->arg_begin();
 Value* ptr_a_510 = args++;
 ptr_a_510->setName("a");
 Value* ptr_b_511 = args++;
 ptr_b_511->setName("b");
 
 BasicBlock* label_512 = BasicBlock::Create(mod->getContext(), "",func_gt_int,0);
 
 // Block  (label_512)
 AllocaInst* ptr_513 = new AllocaInst(PointerTy_30, "", label_512);
 ptr_513->setAlignment(8);
 AllocaInst* ptr_514 = new AllocaInst(PointerTy_30, "", label_512);
 ptr_514->setAlignment(8);
 StoreInst* void_515 = new StoreInst(ptr_a_510, ptr_513, false, label_512);
 void_515->setAlignment(8);
 StoreInst* void_516 = new StoreInst(ptr_b_511, ptr_514, false, label_512);
 void_516->setAlignment(8);
 LoadInst* ptr_517 = new LoadInst(ptr_513, "", false, label_512);
 ptr_517->setAlignment(8);
 GetElementPtrInst* ptr_518 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_517, {
  const_int32_72, 
  const_int32_70
 }, "", label_512);
 CastInst* ptr_519 = new BitCastInst(ptr_518, PointerTy_32, "", label_512);
 LoadInst* int64_520 = new LoadInst(ptr_519, "", false, label_512);
 int64_520->setAlignment(8);
 LoadInst* ptr_521 = new LoadInst(ptr_514, "", false, label_512);
 ptr_521->setAlignment(8);
 GetElementPtrInst* ptr_522 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_521, {
  const_int32_72, 
  const_int32_70
 }, "", label_512);
 CastInst* ptr_523 = new BitCastInst(ptr_522, PointerTy_32, "", label_512);
 LoadInst* int64_524 = new LoadInst(ptr_523, "", false, label_512);
 int64_524->setAlignment(8);
 ICmpInst* int1_525 = new ICmpInst(*label_512, ICmpInst::ICMP_UGT, int64_520, int64_524, "");
 CastInst* int32_526 = new ZExtInst(int1_525, IntegerType::get(mod->getContext(), 32), "", label_512);
 CastInst* int64_527 = new SExtInst(int32_526, IntegerType::get(mod->getContext(), 64), "", label_512);
 CallInst* ptr_528 = CallInst::Create(func_makeInt, int64_527, "", label_512);
 ptr_528->setCallingConv(CallingConv::C);
 ptr_528->setTailCall(false);
 AttributeSet ptr_528_PAL;
 ptr_528->setAttributes(ptr_528_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_528, label_512);
 
}

// Function: geq_int (func_geq_int)
{
 Function::arg_iterator args = func_geq_int->arg_begin();
 Value* ptr_a_530 = args++;
 ptr_a_530->setName("a");
 Value* ptr_b_531 = args++;
 ptr_b_531->setName("b");
 
 BasicBlock* label_532 = BasicBlock::Create(mod->getContext(), "",func_geq_int,0);
 
 // Block  (label_532)
 AllocaInst* ptr_533 = new AllocaInst(PointerTy_30, "", label_532);
 ptr_533->setAlignment(8);
 AllocaInst* ptr_534 = new AllocaInst(PointerTy_30, "", label_532);
 ptr_534->setAlignment(8);
 StoreInst* void_535 = new StoreInst(ptr_a_530, ptr_533, false, label_532);
 void_535->setAlignment(8);
 StoreInst* void_536 = new StoreInst(ptr_b_531, ptr_534, false, label_532);
 void_536->setAlignment(8);
 LoadInst* ptr_537 = new LoadInst(ptr_533, "", false, label_532);
 ptr_537->setAlignment(8);
 GetElementPtrInst* ptr_538 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_537, {
  const_int32_72, 
  const_int32_70
 }, "", label_532);
 CastInst* ptr_539 = new BitCastInst(ptr_538, PointerTy_32, "", label_532);
 LoadInst* int64_540 = new LoadInst(ptr_539, "", false, label_532);
 int64_540->setAlignment(8);
 LoadInst* ptr_541 = new LoadInst(ptr_534, "", false, label_532);
 ptr_541->setAlignment(8);
 GetElementPtrInst* ptr_542 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_541, {
  const_int32_72, 
  const_int32_70
 }, "", label_532);
 CastInst* ptr_543 = new BitCastInst(ptr_542, PointerTy_32, "", label_532);
 LoadInst* int64_544 = new LoadInst(ptr_543, "", false, label_532);
 int64_544->setAlignment(8);
 ICmpInst* int1_545 = new ICmpInst(*label_532, ICmpInst::ICMP_UGE, int64_540, int64_544, "");
 CastInst* int32_546 = new ZExtInst(int1_545, IntegerType::get(mod->getContext(), 32), "", label_532);
 CastInst* int64_547 = new SExtInst(int32_546, IntegerType::get(mod->getContext(), 64), "", label_532);
 CallInst* ptr_548 = CallInst::Create(func_makeInt, int64_547, "", label_532);
 ptr_548->setCallingConv(CallingConv::C);
 ptr_548->setTailCall(false);
 AttributeSet ptr_548_PAL;
 ptr_548->setAttributes(ptr_548_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_548, label_532);
 
}

// Function: lt_int (func_lt_int)
{
 Function::arg_iterator args = func_lt_int->arg_begin();
 Value* ptr_a_550 = args++;
 ptr_a_550->setName("a");
 Value* ptr_b_551 = args++;
 ptr_b_551->setName("b");
 
 BasicBlock* label_552 = BasicBlock::Create(mod->getContext(), "",func_lt_int,0);
 
 // Block  (label_552)
 AllocaInst* ptr_553 = new AllocaInst(PointerTy_30, "", label_552);
 ptr_553->setAlignment(8);
 AllocaInst* ptr_554 = new AllocaInst(PointerTy_30, "", label_552);
 ptr_554->setAlignment(8);
 StoreInst* void_555 = new StoreInst(ptr_a_550, ptr_553, false, label_552);
 void_555->setAlignment(8);
 StoreInst* void_556 = new StoreInst(ptr_b_551, ptr_554, false, label_552);
 void_556->setAlignment(8);
 LoadInst* ptr_557 = new LoadInst(ptr_553, "", false, label_552);
 ptr_557->setAlignment(8);
 GetElementPtrInst* ptr_558 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_557, {
  const_int32_72, 
  const_int32_70
 }, "", label_552);
 CastInst* ptr_559 = new BitCastInst(ptr_558, PointerTy_32, "", label_552);
 LoadInst* int64_560 = new LoadInst(ptr_559, "", false, label_552);
 int64_560->setAlignment(8);
 LoadInst* ptr_561 = new LoadInst(ptr_554, "", false, label_552);
 ptr_561->setAlignment(8);
 GetElementPtrInst* ptr_562 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_561, {
  const_int32_72, 
  const_int32_70
 }, "", label_552);
 CastInst* ptr_563 = new BitCastInst(ptr_562, PointerTy_32, "", label_552);
 LoadInst* int64_564 = new LoadInst(ptr_563, "", false, label_552);
 int64_564->setAlignment(8);
 ICmpInst* int1_565 = new ICmpInst(*label_552, ICmpInst::ICMP_ULT, int64_560, int64_564, "");
 CastInst* int32_566 = new ZExtInst(int1_565, IntegerType::get(mod->getContext(), 32), "", label_552);
 CastInst* int64_567 = new SExtInst(int32_566, IntegerType::get(mod->getContext(), 64), "", label_552);
 CallInst* ptr_568 = CallInst::Create(func_makeInt, int64_567, "", label_552);
 ptr_568->setCallingConv(CallingConv::C);
 ptr_568->setTailCall(false);
 AttributeSet ptr_568_PAL;
 ptr_568->setAttributes(ptr_568_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_568, label_552);
 
}

// Function: leq_int (func_leq_int)
{
 Function::arg_iterator args = func_leq_int->arg_begin();
 Value* ptr_a_570 = args++;
 ptr_a_570->setName("a");
 Value* ptr_b_571 = args++;
 ptr_b_571->setName("b");
 
 BasicBlock* label_572 = BasicBlock::Create(mod->getContext(), "",func_leq_int,0);
 
 // Block  (label_572)
 AllocaInst* ptr_573 = new AllocaInst(PointerTy_30, "", label_572);
 ptr_573->setAlignment(8);
 AllocaInst* ptr_574 = new AllocaInst(PointerTy_30, "", label_572);
 ptr_574->setAlignment(8);
 StoreInst* void_575 = new StoreInst(ptr_a_570, ptr_573, false, label_572);
 void_575->setAlignment(8);
 StoreInst* void_576 = new StoreInst(ptr_b_571, ptr_574, false, label_572);
 void_576->setAlignment(8);
 LoadInst* ptr_577 = new LoadInst(ptr_573, "", false, label_572);
 ptr_577->setAlignment(8);
 GetElementPtrInst* ptr_578 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_577, {
  const_int32_72, 
  const_int32_70
 }, "", label_572);
 CastInst* ptr_579 = new BitCastInst(ptr_578, PointerTy_32, "", label_572);
 LoadInst* int64_580 = new LoadInst(ptr_579, "", false, label_572);
 int64_580->setAlignment(8);
 LoadInst* ptr_581 = new LoadInst(ptr_574, "", false, label_572);
 ptr_581->setAlignment(8);
 GetElementPtrInst* ptr_582 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_581, {
  const_int32_72, 
  const_int32_70
 }, "", label_572);
 CastInst* ptr_583 = new BitCastInst(ptr_582, PointerTy_32, "", label_572);
 LoadInst* int64_584 = new LoadInst(ptr_583, "", false, label_572);
 int64_584->setAlignment(8);
 ICmpInst* int1_585 = new ICmpInst(*label_572, ICmpInst::ICMP_ULE, int64_580, int64_584, "");
 CastInst* int32_586 = new ZExtInst(int1_585, IntegerType::get(mod->getContext(), 32), "", label_572);
 CastInst* int64_587 = new SExtInst(int32_586, IntegerType::get(mod->getContext(), 64), "", label_572);
 CallInst* ptr_588 = CallInst::Create(func_makeInt, int64_587, "", label_572);
 ptr_588->setCallingConv(CallingConv::C);
 ptr_588->setTailCall(false);
 AttributeSet ptr_588_PAL;
 ptr_588->setAttributes(ptr_588_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_588, label_572);
 
}

// Function: div_int (func_div_int)
{
 Function::arg_iterator args = func_div_int->arg_begin();
 Value* ptr_a_590 = args++;
 ptr_a_590->setName("a");
 Value* ptr_b_591 = args++;
 ptr_b_591->setName("b");
 
 BasicBlock* label_592 = BasicBlock::Create(mod->getContext(), "",func_div_int,0);
 
 // Block  (label_592)
 AllocaInst* ptr_593 = new AllocaInst(PointerTy_30, "", label_592);
 ptr_593->setAlignment(8);
 AllocaInst* ptr_594 = new AllocaInst(PointerTy_30, "", label_592);
 ptr_594->setAlignment(8);
 StoreInst* void_595 = new StoreInst(ptr_a_590, ptr_593, false, label_592);
 void_595->setAlignment(8);
 StoreInst* void_596 = new StoreInst(ptr_b_591, ptr_594, false, label_592);
 void_596->setAlignment(8);
 LoadInst* ptr_597 = new LoadInst(ptr_593, "", false, label_592);
 ptr_597->setAlignment(8);
 GetElementPtrInst* ptr_598 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_597, {
  const_int32_72, 
  const_int32_70
 }, "", label_592);
 CastInst* ptr_599 = new BitCastInst(ptr_598, PointerTy_32, "", label_592);
 LoadInst* int64_600 = new LoadInst(ptr_599, "", false, label_592);
 int64_600->setAlignment(8);
 LoadInst* ptr_601 = new LoadInst(ptr_594, "", false, label_592);
 ptr_601->setAlignment(8);
 GetElementPtrInst* ptr_602 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_601, {
  const_int32_72, 
  const_int32_70
 }, "", label_592);
 CastInst* ptr_603 = new BitCastInst(ptr_602, PointerTy_32, "", label_592);
 LoadInst* int64_604 = new LoadInst(ptr_603, "", false, label_592);
 int64_604->setAlignment(8);
 BinaryOperator* int64_605 = BinaryOperator::Create(Instruction::UDiv, int64_600, int64_604, "", label_592);
 CallInst* ptr_606 = CallInst::Create(func_makeInt, int64_605, "", label_592);
 ptr_606->setCallingConv(CallingConv::C);
 ptr_606->setTailCall(false);
 AttributeSet ptr_606_PAL;
 ptr_606->setAttributes(ptr_606_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_606, label_592);
 
}

// Function: mul_int (func_mul_int)
{
 Function::arg_iterator args = func_mul_int->arg_begin();
 Value* ptr_a_608 = args++;
 ptr_a_608->setName("a");
 Value* ptr_b_609 = args++;
 ptr_b_609->setName("b");
 
 BasicBlock* label_610 = BasicBlock::Create(mod->getContext(), "",func_mul_int,0);
 
 // Block  (label_610)
 AllocaInst* ptr_611 = new AllocaInst(PointerTy_30, "", label_610);
 ptr_611->setAlignment(8);
 AllocaInst* ptr_612 = new AllocaInst(PointerTy_30, "", label_610);
 ptr_612->setAlignment(8);
 StoreInst* void_613 = new StoreInst(ptr_a_608, ptr_611, false, label_610);
 void_613->setAlignment(8);
 StoreInst* void_614 = new StoreInst(ptr_b_609, ptr_612, false, label_610);
 void_614->setAlignment(8);
 LoadInst* ptr_615 = new LoadInst(ptr_611, "", false, label_610);
 ptr_615->setAlignment(8);
 GetElementPtrInst* ptr_616 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_615, {
  const_int32_72, 
  const_int32_70
 }, "", label_610);
 CastInst* ptr_617 = new BitCastInst(ptr_616, PointerTy_32, "", label_610);
 LoadInst* int64_618 = new LoadInst(ptr_617, "", false, label_610);
 int64_618->setAlignment(8);
 LoadInst* ptr_619 = new LoadInst(ptr_612, "", false, label_610);
 ptr_619->setAlignment(8);
 GetElementPtrInst* ptr_620 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_619, {
  const_int32_72, 
  const_int32_70
 }, "", label_610);
 CastInst* ptr_621 = new BitCastInst(ptr_620, PointerTy_32, "", label_610);
 LoadInst* int64_622 = new LoadInst(ptr_621, "", false, label_610);
 int64_622->setAlignment(8);
 BinaryOperator* int64_623 = BinaryOperator::Create(Instruction::Mul, int64_618, int64_622, "", label_610);
 CallInst* ptr_624 = CallInst::Create(func_makeInt, int64_623, "", label_610);
 ptr_624->setCallingConv(CallingConv::C);
 ptr_624->setTailCall(false);
 AttributeSet ptr_624_PAL;
 ptr_624->setAttributes(ptr_624_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_624, label_610);
 
}

// Function: and_int (func_and_int)
{
 Function::arg_iterator args = func_and_int->arg_begin();
 Value* ptr_a_626 = args++;
 ptr_a_626->setName("a");
 Value* ptr_b_627 = args++;
 ptr_b_627->setName("b");
 
 BasicBlock* label_628 = BasicBlock::Create(mod->getContext(), "",func_and_int,0);
 
 // Block  (label_628)
 AllocaInst* ptr_629 = new AllocaInst(PointerTy_30, "", label_628);
 ptr_629->setAlignment(8);
 AllocaInst* ptr_630 = new AllocaInst(PointerTy_30, "", label_628);
 ptr_630->setAlignment(8);
 StoreInst* void_631 = new StoreInst(ptr_a_626, ptr_629, false, label_628);
 void_631->setAlignment(8);
 StoreInst* void_632 = new StoreInst(ptr_b_627, ptr_630, false, label_628);
 void_632->setAlignment(8);
 LoadInst* ptr_633 = new LoadInst(ptr_629, "", false, label_628);
 ptr_633->setAlignment(8);
 GetElementPtrInst* ptr_634 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_633, {
  const_int32_72, 
  const_int32_70
 }, "", label_628);
 CastInst* ptr_635 = new BitCastInst(ptr_634, PointerTy_32, "", label_628);
 LoadInst* int64_636 = new LoadInst(ptr_635, "", false, label_628);
 int64_636->setAlignment(8);
 LoadInst* ptr_637 = new LoadInst(ptr_630, "", false, label_628);
 ptr_637->setAlignment(8);
 GetElementPtrInst* ptr_638 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_637, {
  const_int32_72, 
  const_int32_70
 }, "", label_628);
 CastInst* ptr_639 = new BitCastInst(ptr_638, PointerTy_32, "", label_628);
 LoadInst* int64_640 = new LoadInst(ptr_639, "", false, label_628);
 int64_640->setAlignment(8);
 BinaryOperator* int64_641 = BinaryOperator::Create(Instruction::And, int64_636, int64_640, "", label_628);
 CallInst* ptr_642 = CallInst::Create(func_makeInt, int64_641, "", label_628);
 ptr_642->setCallingConv(CallingConv::C);
 ptr_642->setTailCall(false);
 AttributeSet ptr_642_PAL;
 ptr_642->setAttributes(ptr_642_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_642, label_628);
 
}

// Function: or_int (func_or_int)
{
 Function::arg_iterator args = func_or_int->arg_begin();
 Value* ptr_a_644 = args++;
 ptr_a_644->setName("a");
 Value* ptr_b_645 = args++;
 ptr_b_645->setName("b");
 
 BasicBlock* label_646 = BasicBlock::Create(mod->getContext(), "",func_or_int,0);
 
 // Block  (label_646)
 AllocaInst* ptr_647 = new AllocaInst(PointerTy_30, "", label_646);
 ptr_647->setAlignment(8);
 AllocaInst* ptr_648 = new AllocaInst(PointerTy_30, "", label_646);
 ptr_648->setAlignment(8);
 StoreInst* void_649 = new StoreInst(ptr_a_644, ptr_647, false, label_646);
 void_649->setAlignment(8);
 StoreInst* void_650 = new StoreInst(ptr_b_645, ptr_648, false, label_646);
 void_650->setAlignment(8);
 LoadInst* ptr_651 = new LoadInst(ptr_647, "", false, label_646);
 ptr_651->setAlignment(8);
 GetElementPtrInst* ptr_652 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_651, {
  const_int32_72, 
  const_int32_70
 }, "", label_646);
 CastInst* ptr_653 = new BitCastInst(ptr_652, PointerTy_32, "", label_646);
 LoadInst* int64_654 = new LoadInst(ptr_653, "", false, label_646);
 int64_654->setAlignment(8);
 LoadInst* ptr_655 = new LoadInst(ptr_648, "", false, label_646);
 ptr_655->setAlignment(8);
 GetElementPtrInst* ptr_656 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_655, {
  const_int32_72, 
  const_int32_70
 }, "", label_646);
 CastInst* ptr_657 = new BitCastInst(ptr_656, PointerTy_32, "", label_646);
 LoadInst* int64_658 = new LoadInst(ptr_657, "", false, label_646);
 int64_658->setAlignment(8);
 BinaryOperator* int64_659 = BinaryOperator::Create(Instruction::Or, int64_654, int64_658, "", label_646);
 CallInst* ptr_660 = CallInst::Create(func_makeInt, int64_659, "", label_646);
 ptr_660->setCallingConv(CallingConv::C);
 ptr_660->setTailCall(false);
 AttributeSet ptr_660_PAL;
 ptr_660->setAttributes(ptr_660_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_660, label_646);
 
}

// Function: sub_any (func_sub_any)
{
 Function::arg_iterator args = func_sub_any->arg_begin();
 Value* ptr_a_662 = args++;
 ptr_a_662->setName("a");
 Value* ptr_b_663 = args++;
 ptr_b_663->setName("b");
 
 BasicBlock* label_664 = BasicBlock::Create(mod->getContext(), "",func_sub_any,0);
 BasicBlock* label_665 = BasicBlock::Create(mod->getContext(), "",func_sub_any,0);
 BasicBlock* label_666 = BasicBlock::Create(mod->getContext(), "",func_sub_any,0);
 BasicBlock* label_667 = BasicBlock::Create(mod->getContext(), "",func_sub_any,0);
 
 // Block  (label_664)
 AllocaInst* ptr_668 = new AllocaInst(PointerTy_30, "", label_664);
 ptr_668->setAlignment(8);
 AllocaInst* ptr_669 = new AllocaInst(PointerTy_30, "", label_664);
 ptr_669->setAlignment(8);
 StoreInst* void_670 = new StoreInst(ptr_a_662, ptr_668, false, label_664);
 void_670->setAlignment(8);
 StoreInst* void_671 = new StoreInst(ptr_b_663, ptr_669, false, label_664);
 void_671->setAlignment(8);
 LoadInst* ptr_672 = new LoadInst(ptr_668, "", false, label_664);
 ptr_672->setAlignment(8);
 GetElementPtrInst* ptr_673 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_672, {
  const_int32_72, 
  const_int32_72
 }, "", label_664);
 CastInst* ptr_674 = new BitCastInst(ptr_673, PointerTy_37, "", label_664);
 LoadInst* int32_675 = new LoadInst(ptr_674, "", false, label_664);
 int32_675->setAlignment(8);
 ICmpInst* int1_676 = new ICmpInst(*label_664, ICmpInst::ICMP_NE, int32_675, const_int32_70, "");
 BranchInst::Create(label_666, label_665, int1_676, label_664);
 
 // Block  (label_665)
 LoadInst* ptr_678 = new LoadInst(ptr_669, "", false, label_665);
 ptr_678->setAlignment(8);
 GetElementPtrInst* ptr_679 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_678, {
  const_int32_72, 
  const_int32_72
 }, "", label_665);
 CastInst* ptr_680 = new BitCastInst(ptr_679, PointerTy_37, "", label_665);
 LoadInst* int32_681 = new LoadInst(ptr_680, "", false, label_665);
 int32_681->setAlignment(8);
 ICmpInst* int1_682 = new ICmpInst(*label_665, ICmpInst::ICMP_NE, int32_681, const_int32_70, "");
 BranchInst::Create(label_666, label_667, int1_682, label_665);
 
 // Block  (label_666)
 CallInst* void_684 = CallInst::Create(func_error, const_ptr_81, "", label_666);
 void_684->setCallingConv(CallingConv::C);
 void_684->setTailCall(false);
 AttributeSet void_684_PAL;
 void_684->setAttributes(void_684_PAL);
 
 BranchInst::Create(label_667, label_666);
 
 // Block  (label_667)
 LoadInst* ptr_686 = new LoadInst(ptr_668, "", false, label_667);
 ptr_686->setAlignment(8);
 LoadInst* ptr_687 = new LoadInst(ptr_669, "", false, label_667);
 ptr_687->setAlignment(8);
 std::vector<Value*> ptr_688_params;
 ptr_688_params.push_back(ptr_686);
 ptr_688_params.push_back(ptr_687);
 CallInst* ptr_688 = CallInst::Create(func_gt_int, ptr_688_params, "", label_667);
 ptr_688->setCallingConv(CallingConv::C);
 ptr_688->setTailCall(false);
 AttributeSet ptr_688_PAL;
 ptr_688->setAttributes(ptr_688_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_688, label_667);
 
}

// Function: gt_any (func_gt_any)
{
 Function::arg_iterator args = func_gt_any->arg_begin();
 Value* ptr_a_690 = args++;
 ptr_a_690->setName("a");
 Value* ptr_b_691 = args++;
 ptr_b_691->setName("b");
 
 BasicBlock* label_692 = BasicBlock::Create(mod->getContext(), "",func_gt_any,0);
 BasicBlock* label_693 = BasicBlock::Create(mod->getContext(), "",func_gt_any,0);
 BasicBlock* label_694 = BasicBlock::Create(mod->getContext(), "",func_gt_any,0);
 BasicBlock* label_695 = BasicBlock::Create(mod->getContext(), "",func_gt_any,0);
 
 // Block  (label_692)
 AllocaInst* ptr_696 = new AllocaInst(PointerTy_30, "", label_692);
 ptr_696->setAlignment(8);
 AllocaInst* ptr_697 = new AllocaInst(PointerTy_30, "", label_692);
 ptr_697->setAlignment(8);
 StoreInst* void_698 = new StoreInst(ptr_a_690, ptr_696, false, label_692);
 void_698->setAlignment(8);
 StoreInst* void_699 = new StoreInst(ptr_b_691, ptr_697, false, label_692);
 void_699->setAlignment(8);
 LoadInst* ptr_700 = new LoadInst(ptr_696, "", false, label_692);
 ptr_700->setAlignment(8);
 GetElementPtrInst* ptr_701 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_700, {
  const_int32_72, 
  const_int32_72
 }, "", label_692);
 CastInst* ptr_702 = new BitCastInst(ptr_701, PointerTy_37, "", label_692);
 LoadInst* int32_703 = new LoadInst(ptr_702, "", false, label_692);
 int32_703->setAlignment(8);
 ICmpInst* int1_704 = new ICmpInst(*label_692, ICmpInst::ICMP_NE, int32_703, const_int32_70, "");
 BranchInst::Create(label_694, label_693, int1_704, label_692);
 
 // Block  (label_693)
 LoadInst* ptr_706 = new LoadInst(ptr_697, "", false, label_693);
 ptr_706->setAlignment(8);
 GetElementPtrInst* ptr_707 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_706, {
  const_int32_72, 
  const_int32_72
 }, "", label_693);
 CastInst* ptr_708 = new BitCastInst(ptr_707, PointerTy_37, "", label_693);
 LoadInst* int32_709 = new LoadInst(ptr_708, "", false, label_693);
 int32_709->setAlignment(8);
 ICmpInst* int1_710 = new ICmpInst(*label_693, ICmpInst::ICMP_NE, int32_709, const_int32_70, "");
 BranchInst::Create(label_694, label_695, int1_710, label_693);
 
 // Block  (label_694)
 CallInst* void_712 = CallInst::Create(func_error, const_ptr_81, "", label_694);
 void_712->setCallingConv(CallingConv::C);
 void_712->setTailCall(false);
 AttributeSet void_712_PAL;
 void_712->setAttributes(void_712_PAL);
 
 BranchInst::Create(label_695, label_694);
 
 // Block  (label_695)
 LoadInst* ptr_714 = new LoadInst(ptr_696, "", false, label_695);
 ptr_714->setAlignment(8);
 LoadInst* ptr_715 = new LoadInst(ptr_697, "", false, label_695);
 ptr_715->setAlignment(8);
 std::vector<Value*> ptr_716_params;
 ptr_716_params.push_back(ptr_714);
 ptr_716_params.push_back(ptr_715);
 CallInst* ptr_716 = CallInst::Create(func_gt_int, ptr_716_params, "", label_695);
 ptr_716->setCallingConv(CallingConv::C);
 ptr_716->setTailCall(false);
 AttributeSet ptr_716_PAL;
 ptr_716->setAttributes(ptr_716_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_716, label_695);
 
}

// Function: geq_any (func_geq_any)
{
 Function::arg_iterator args = func_geq_any->arg_begin();
 Value* ptr_a_718 = args++;
 ptr_a_718->setName("a");
 Value* ptr_b_719 = args++;
 ptr_b_719->setName("b");
 
 BasicBlock* label_720 = BasicBlock::Create(mod->getContext(), "",func_geq_any,0);
 BasicBlock* label_721 = BasicBlock::Create(mod->getContext(), "",func_geq_any,0);
 BasicBlock* label_722 = BasicBlock::Create(mod->getContext(), "",func_geq_any,0);
 BasicBlock* label_723 = BasicBlock::Create(mod->getContext(), "",func_geq_any,0);
 
 // Block  (label_720)
 AllocaInst* ptr_724 = new AllocaInst(PointerTy_30, "", label_720);
 ptr_724->setAlignment(8);
 AllocaInst* ptr_725 = new AllocaInst(PointerTy_30, "", label_720);
 ptr_725->setAlignment(8);
 StoreInst* void_726 = new StoreInst(ptr_a_718, ptr_724, false, label_720);
 void_726->setAlignment(8);
 StoreInst* void_727 = new StoreInst(ptr_b_719, ptr_725, false, label_720);
 void_727->setAlignment(8);
 LoadInst* ptr_728 = new LoadInst(ptr_724, "", false, label_720);
 ptr_728->setAlignment(8);
 GetElementPtrInst* ptr_729 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_728, {
  const_int32_72, 
  const_int32_72
 }, "", label_720);
 CastInst* ptr_730 = new BitCastInst(ptr_729, PointerTy_37, "", label_720);
 LoadInst* int32_731 = new LoadInst(ptr_730, "", false, label_720);
 int32_731->setAlignment(8);
 ICmpInst* int1_732 = new ICmpInst(*label_720, ICmpInst::ICMP_NE, int32_731, const_int32_70, "");
 BranchInst::Create(label_722, label_721, int1_732, label_720);
 
 // Block  (label_721)
 LoadInst* ptr_734 = new LoadInst(ptr_725, "", false, label_721);
 ptr_734->setAlignment(8);
 GetElementPtrInst* ptr_735 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_734, {
  const_int32_72, 
  const_int32_72
 }, "", label_721);
 CastInst* ptr_736 = new BitCastInst(ptr_735, PointerTy_37, "", label_721);
 LoadInst* int32_737 = new LoadInst(ptr_736, "", false, label_721);
 int32_737->setAlignment(8);
 ICmpInst* int1_738 = new ICmpInst(*label_721, ICmpInst::ICMP_NE, int32_737, const_int32_70, "");
 BranchInst::Create(label_722, label_723, int1_738, label_721);
 
 // Block  (label_722)
 CallInst* void_740 = CallInst::Create(func_error, const_ptr_81, "", label_722);
 void_740->setCallingConv(CallingConv::C);
 void_740->setTailCall(false);
 AttributeSet void_740_PAL;
 void_740->setAttributes(void_740_PAL);
 
 BranchInst::Create(label_723, label_722);
 
 // Block  (label_723)
 LoadInst* ptr_742 = new LoadInst(ptr_724, "", false, label_723);
 ptr_742->setAlignment(8);
 LoadInst* ptr_743 = new LoadInst(ptr_725, "", false, label_723);
 ptr_743->setAlignment(8);
 std::vector<Value*> ptr_744_params;
 ptr_744_params.push_back(ptr_742);
 ptr_744_params.push_back(ptr_743);
 CallInst* ptr_744 = CallInst::Create(func_geq_int, ptr_744_params, "", label_723);
 ptr_744->setCallingConv(CallingConv::C);
 ptr_744->setTailCall(false);
 AttributeSet ptr_744_PAL;
 ptr_744->setAttributes(ptr_744_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_744, label_723);
 
}

// Function: lt_any (func_lt_any)
{
 Function::arg_iterator args = func_lt_any->arg_begin();
 Value* ptr_a_746 = args++;
 ptr_a_746->setName("a");
 Value* ptr_b_747 = args++;
 ptr_b_747->setName("b");
 
 BasicBlock* label_748 = BasicBlock::Create(mod->getContext(), "",func_lt_any,0);
 BasicBlock* label_749 = BasicBlock::Create(mod->getContext(), "",func_lt_any,0);
 BasicBlock* label_750 = BasicBlock::Create(mod->getContext(), "",func_lt_any,0);
 BasicBlock* label_751 = BasicBlock::Create(mod->getContext(), "",func_lt_any,0);
 
 // Block  (label_748)
 AllocaInst* ptr_752 = new AllocaInst(PointerTy_30, "", label_748);
 ptr_752->setAlignment(8);
 AllocaInst* ptr_753 = new AllocaInst(PointerTy_30, "", label_748);
 ptr_753->setAlignment(8);
 StoreInst* void_754 = new StoreInst(ptr_a_746, ptr_752, false, label_748);
 void_754->setAlignment(8);
 StoreInst* void_755 = new StoreInst(ptr_b_747, ptr_753, false, label_748);
 void_755->setAlignment(8);
 LoadInst* ptr_756 = new LoadInst(ptr_752, "", false, label_748);
 ptr_756->setAlignment(8);
 GetElementPtrInst* ptr_757 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_756, {
  const_int32_72, 
  const_int32_72
 }, "", label_748);
 CastInst* ptr_758 = new BitCastInst(ptr_757, PointerTy_37, "", label_748);
 LoadInst* int32_759 = new LoadInst(ptr_758, "", false, label_748);
 int32_759->setAlignment(8);
 ICmpInst* int1_760 = new ICmpInst(*label_748, ICmpInst::ICMP_NE, int32_759, const_int32_70, "");
 BranchInst::Create(label_750, label_749, int1_760, label_748);
 
 // Block  (label_749)
 LoadInst* ptr_762 = new LoadInst(ptr_753, "", false, label_749);
 ptr_762->setAlignment(8);
 GetElementPtrInst* ptr_763 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_762, {
  const_int32_72, 
  const_int32_72
 }, "", label_749);
 CastInst* ptr_764 = new BitCastInst(ptr_763, PointerTy_37, "", label_749);
 LoadInst* int32_765 = new LoadInst(ptr_764, "", false, label_749);
 int32_765->setAlignment(8);
 ICmpInst* int1_766 = new ICmpInst(*label_749, ICmpInst::ICMP_NE, int32_765, const_int32_70, "");
 BranchInst::Create(label_750, label_751, int1_766, label_749);
 
 // Block  (label_750)
 CallInst* void_768 = CallInst::Create(func_error, const_ptr_81, "", label_750);
 void_768->setCallingConv(CallingConv::C);
 void_768->setTailCall(false);
 AttributeSet void_768_PAL;
 void_768->setAttributes(void_768_PAL);
 
 BranchInst::Create(label_751, label_750);
 
 // Block  (label_751)
 LoadInst* ptr_770 = new LoadInst(ptr_752, "", false, label_751);
 ptr_770->setAlignment(8);
 LoadInst* ptr_771 = new LoadInst(ptr_753, "", false, label_751);
 ptr_771->setAlignment(8);
 std::vector<Value*> ptr_772_params;
 ptr_772_params.push_back(ptr_770);
 ptr_772_params.push_back(ptr_771);
 CallInst* ptr_772 = CallInst::Create(func_lt_int, ptr_772_params, "", label_751);
 ptr_772->setCallingConv(CallingConv::C);
 ptr_772->setTailCall(false);
 AttributeSet ptr_772_PAL;
 ptr_772->setAttributes(ptr_772_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_772, label_751);
 
}

// Function: leq_any (func_leq_any)
{
 Function::arg_iterator args = func_leq_any->arg_begin();
 Value* ptr_a_774 = args++;
 ptr_a_774->setName("a");
 Value* ptr_b_775 = args++;
 ptr_b_775->setName("b");
 
 BasicBlock* label_776 = BasicBlock::Create(mod->getContext(), "",func_leq_any,0);
 BasicBlock* label_777 = BasicBlock::Create(mod->getContext(), "",func_leq_any,0);
 BasicBlock* label_778 = BasicBlock::Create(mod->getContext(), "",func_leq_any,0);
 BasicBlock* label_779 = BasicBlock::Create(mod->getContext(), "",func_leq_any,0);
 
 // Block  (label_776)
 AllocaInst* ptr_780 = new AllocaInst(PointerTy_30, "", label_776);
 ptr_780->setAlignment(8);
 AllocaInst* ptr_781 = new AllocaInst(PointerTy_30, "", label_776);
 ptr_781->setAlignment(8);
 StoreInst* void_782 = new StoreInst(ptr_a_774, ptr_780, false, label_776);
 void_782->setAlignment(8);
 StoreInst* void_783 = new StoreInst(ptr_b_775, ptr_781, false, label_776);
 void_783->setAlignment(8);
 LoadInst* ptr_784 = new LoadInst(ptr_780, "", false, label_776);
 ptr_784->setAlignment(8);
 GetElementPtrInst* ptr_785 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_784, {
  const_int32_72, 
  const_int32_72
 }, "", label_776);
 CastInst* ptr_786 = new BitCastInst(ptr_785, PointerTy_37, "", label_776);
 LoadInst* int32_787 = new LoadInst(ptr_786, "", false, label_776);
 int32_787->setAlignment(8);
 ICmpInst* int1_788 = new ICmpInst(*label_776, ICmpInst::ICMP_NE, int32_787, const_int32_70, "");
 BranchInst::Create(label_778, label_777, int1_788, label_776);
 
 // Block  (label_777)
 LoadInst* ptr_790 = new LoadInst(ptr_781, "", false, label_777);
 ptr_790->setAlignment(8);
 GetElementPtrInst* ptr_791 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_790, {
  const_int32_72, 
  const_int32_72
 }, "", label_777);
 CastInst* ptr_792 = new BitCastInst(ptr_791, PointerTy_37, "", label_777);
 LoadInst* int32_793 = new LoadInst(ptr_792, "", false, label_777);
 int32_793->setAlignment(8);
 ICmpInst* int1_794 = new ICmpInst(*label_777, ICmpInst::ICMP_NE, int32_793, const_int32_70, "");
 BranchInst::Create(label_778, label_779, int1_794, label_777);
 
 // Block  (label_778)
 CallInst* void_796 = CallInst::Create(func_error, const_ptr_81, "", label_778);
 void_796->setCallingConv(CallingConv::C);
 void_796->setTailCall(false);
 AttributeSet void_796_PAL;
 void_796->setAttributes(void_796_PAL);
 
 BranchInst::Create(label_779, label_778);
 
 // Block  (label_779)
 LoadInst* ptr_798 = new LoadInst(ptr_780, "", false, label_779);
 ptr_798->setAlignment(8);
 LoadInst* ptr_799 = new LoadInst(ptr_781, "", false, label_779);
 ptr_799->setAlignment(8);
 std::vector<Value*> ptr_800_params;
 ptr_800_params.push_back(ptr_798);
 ptr_800_params.push_back(ptr_799);
 CallInst* ptr_800 = CallInst::Create(func_leq_int, ptr_800_params, "", label_779);
 ptr_800->setCallingConv(CallingConv::C);
 ptr_800->setTailCall(false);
 AttributeSet ptr_800_PAL;
 ptr_800->setAttributes(ptr_800_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_800, label_779);
 
}

// Function: div_any (func_div_any)
{
 Function::arg_iterator args = func_div_any->arg_begin();
 Value* ptr_a_802 = args++;
 ptr_a_802->setName("a");
 Value* ptr_b_803 = args++;
 ptr_b_803->setName("b");
 
 BasicBlock* label_804 = BasicBlock::Create(mod->getContext(), "",func_div_any,0);
 BasicBlock* label_805 = BasicBlock::Create(mod->getContext(), "",func_div_any,0);
 BasicBlock* label_806 = BasicBlock::Create(mod->getContext(), "",func_div_any,0);
 BasicBlock* label_807 = BasicBlock::Create(mod->getContext(), "",func_div_any,0);
 
 // Block  (label_804)
 AllocaInst* ptr_808 = new AllocaInst(PointerTy_30, "", label_804);
 ptr_808->setAlignment(8);
 AllocaInst* ptr_809 = new AllocaInst(PointerTy_30, "", label_804);
 ptr_809->setAlignment(8);
 StoreInst* void_810 = new StoreInst(ptr_a_802, ptr_808, false, label_804);
 void_810->setAlignment(8);
 StoreInst* void_811 = new StoreInst(ptr_b_803, ptr_809, false, label_804);
 void_811->setAlignment(8);
 LoadInst* ptr_812 = new LoadInst(ptr_808, "", false, label_804);
 ptr_812->setAlignment(8);
 GetElementPtrInst* ptr_813 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_812, {
  const_int32_72, 
  const_int32_72
 }, "", label_804);
 CastInst* ptr_814 = new BitCastInst(ptr_813, PointerTy_37, "", label_804);
 LoadInst* int32_815 = new LoadInst(ptr_814, "", false, label_804);
 int32_815->setAlignment(8);
 ICmpInst* int1_816 = new ICmpInst(*label_804, ICmpInst::ICMP_NE, int32_815, const_int32_70, "");
 BranchInst::Create(label_806, label_805, int1_816, label_804);
 
 // Block  (label_805)
 LoadInst* ptr_818 = new LoadInst(ptr_809, "", false, label_805);
 ptr_818->setAlignment(8);
 GetElementPtrInst* ptr_819 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_818, {
  const_int32_72, 
  const_int32_72
 }, "", label_805);
 CastInst* ptr_820 = new BitCastInst(ptr_819, PointerTy_37, "", label_805);
 LoadInst* int32_821 = new LoadInst(ptr_820, "", false, label_805);
 int32_821->setAlignment(8);
 ICmpInst* int1_822 = new ICmpInst(*label_805, ICmpInst::ICMP_NE, int32_821, const_int32_70, "");
 BranchInst::Create(label_806, label_807, int1_822, label_805);
 
 // Block  (label_806)
 CallInst* void_824 = CallInst::Create(func_error, const_ptr_81, "", label_806);
 void_824->setCallingConv(CallingConv::C);
 void_824->setTailCall(false);
 AttributeSet void_824_PAL;
 void_824->setAttributes(void_824_PAL);
 
 BranchInst::Create(label_807, label_806);
 
 // Block  (label_807)
 LoadInst* ptr_826 = new LoadInst(ptr_808, "", false, label_807);
 ptr_826->setAlignment(8);
 LoadInst* ptr_827 = new LoadInst(ptr_809, "", false, label_807);
 ptr_827->setAlignment(8);
 std::vector<Value*> ptr_828_params;
 ptr_828_params.push_back(ptr_826);
 ptr_828_params.push_back(ptr_827);
 CallInst* ptr_828 = CallInst::Create(func_div_int, ptr_828_params, "", label_807);
 ptr_828->setCallingConv(CallingConv::C);
 ptr_828->setTailCall(false);
 AttributeSet ptr_828_PAL;
 ptr_828->setAttributes(ptr_828_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_828, label_807);
 
}

// Function: mul_any (func_mul_any)
{
 Function::arg_iterator args = func_mul_any->arg_begin();
 Value* ptr_a_830 = args++;
 ptr_a_830->setName("a");
 Value* ptr_b_831 = args++;
 ptr_b_831->setName("b");
 
 BasicBlock* label_832 = BasicBlock::Create(mod->getContext(), "",func_mul_any,0);
 BasicBlock* label_833 = BasicBlock::Create(mod->getContext(), "",func_mul_any,0);
 BasicBlock* label_834 = BasicBlock::Create(mod->getContext(), "",func_mul_any,0);
 BasicBlock* label_835 = BasicBlock::Create(mod->getContext(), "",func_mul_any,0);
 
 // Block  (label_832)
 AllocaInst* ptr_836 = new AllocaInst(PointerTy_30, "", label_832);
 ptr_836->setAlignment(8);
 AllocaInst* ptr_837 = new AllocaInst(PointerTy_30, "", label_832);
 ptr_837->setAlignment(8);
 StoreInst* void_838 = new StoreInst(ptr_a_830, ptr_836, false, label_832);
 void_838->setAlignment(8);
 StoreInst* void_839 = new StoreInst(ptr_b_831, ptr_837, false, label_832);
 void_839->setAlignment(8);
 LoadInst* ptr_840 = new LoadInst(ptr_836, "", false, label_832);
 ptr_840->setAlignment(8);
 GetElementPtrInst* ptr_841 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_840, {
  const_int32_72, 
  const_int32_72
 }, "", label_832);
 CastInst* ptr_842 = new BitCastInst(ptr_841, PointerTy_37, "", label_832);
 LoadInst* int32_843 = new LoadInst(ptr_842, "", false, label_832);
 int32_843->setAlignment(8);
 ICmpInst* int1_844 = new ICmpInst(*label_832, ICmpInst::ICMP_NE, int32_843, const_int32_70, "");
 BranchInst::Create(label_834, label_833, int1_844, label_832);
 
 // Block  (label_833)
 LoadInst* ptr_846 = new LoadInst(ptr_837, "", false, label_833);
 ptr_846->setAlignment(8);
 GetElementPtrInst* ptr_847 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_846, {
  const_int32_72, 
  const_int32_72
 }, "", label_833);
 CastInst* ptr_848 = new BitCastInst(ptr_847, PointerTy_37, "", label_833);
 LoadInst* int32_849 = new LoadInst(ptr_848, "", false, label_833);
 int32_849->setAlignment(8);
 ICmpInst* int1_850 = new ICmpInst(*label_833, ICmpInst::ICMP_NE, int32_849, const_int32_70, "");
 BranchInst::Create(label_834, label_835, int1_850, label_833);
 
 // Block  (label_834)
 CallInst* void_852 = CallInst::Create(func_error, const_ptr_81, "", label_834);
 void_852->setCallingConv(CallingConv::C);
 void_852->setTailCall(false);
 AttributeSet void_852_PAL;
 void_852->setAttributes(void_852_PAL);
 
 BranchInst::Create(label_835, label_834);
 
 // Block  (label_835)
 LoadInst* ptr_854 = new LoadInst(ptr_836, "", false, label_835);
 ptr_854->setAlignment(8);
 LoadInst* ptr_855 = new LoadInst(ptr_837, "", false, label_835);
 ptr_855->setAlignment(8);
 std::vector<Value*> ptr_856_params;
 ptr_856_params.push_back(ptr_854);
 ptr_856_params.push_back(ptr_855);
 CallInst* ptr_856 = CallInst::Create(func_mul_int, ptr_856_params, "", label_835);
 ptr_856->setCallingConv(CallingConv::C);
 ptr_856->setTailCall(false);
 AttributeSet ptr_856_PAL;
 ptr_856->setAttributes(ptr_856_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_856, label_835);
 
}

// Function: and_any (func_and_any)
{
 Function::arg_iterator args = func_and_any->arg_begin();
 Value* ptr_a_858 = args++;
 ptr_a_858->setName("a");
 Value* ptr_b_859 = args++;
 ptr_b_859->setName("b");
 
 BasicBlock* label_860 = BasicBlock::Create(mod->getContext(), "",func_and_any,0);
 BasicBlock* label_861 = BasicBlock::Create(mod->getContext(), "",func_and_any,0);
 BasicBlock* label_862 = BasicBlock::Create(mod->getContext(), "",func_and_any,0);
 BasicBlock* label_863 = BasicBlock::Create(mod->getContext(), "",func_and_any,0);
 
 // Block  (label_860)
 AllocaInst* ptr_864 = new AllocaInst(PointerTy_30, "", label_860);
 ptr_864->setAlignment(8);
 AllocaInst* ptr_865 = new AllocaInst(PointerTy_30, "", label_860);
 ptr_865->setAlignment(8);
 StoreInst* void_866 = new StoreInst(ptr_a_858, ptr_864, false, label_860);
 void_866->setAlignment(8);
 StoreInst* void_867 = new StoreInst(ptr_b_859, ptr_865, false, label_860);
 void_867->setAlignment(8);
 LoadInst* ptr_868 = new LoadInst(ptr_864, "", false, label_860);
 ptr_868->setAlignment(8);
 GetElementPtrInst* ptr_869 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_868, {
  const_int32_72, 
  const_int32_72
 }, "", label_860);
 CastInst* ptr_870 = new BitCastInst(ptr_869, PointerTy_37, "", label_860);
 LoadInst* int32_871 = new LoadInst(ptr_870, "", false, label_860);
 int32_871->setAlignment(8);
 ICmpInst* int1_872 = new ICmpInst(*label_860, ICmpInst::ICMP_NE, int32_871, const_int32_70, "");
 BranchInst::Create(label_862, label_861, int1_872, label_860);
 
 // Block  (label_861)
 LoadInst* ptr_874 = new LoadInst(ptr_865, "", false, label_861);
 ptr_874->setAlignment(8);
 GetElementPtrInst* ptr_875 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_874, {
  const_int32_72, 
  const_int32_72
 }, "", label_861);
 CastInst* ptr_876 = new BitCastInst(ptr_875, PointerTy_37, "", label_861);
 LoadInst* int32_877 = new LoadInst(ptr_876, "", false, label_861);
 int32_877->setAlignment(8);
 ICmpInst* int1_878 = new ICmpInst(*label_861, ICmpInst::ICMP_NE, int32_877, const_int32_70, "");
 BranchInst::Create(label_862, label_863, int1_878, label_861);
 
 // Block  (label_862)
 CallInst* void_880 = CallInst::Create(func_error, const_ptr_81, "", label_862);
 void_880->setCallingConv(CallingConv::C);
 void_880->setTailCall(false);
 AttributeSet void_880_PAL;
 void_880->setAttributes(void_880_PAL);
 
 BranchInst::Create(label_863, label_862);
 
 // Block  (label_863)
 LoadInst* ptr_882 = new LoadInst(ptr_864, "", false, label_863);
 ptr_882->setAlignment(8);
 LoadInst* ptr_883 = new LoadInst(ptr_865, "", false, label_863);
 ptr_883->setAlignment(8);
 std::vector<Value*> ptr_884_params;
 ptr_884_params.push_back(ptr_882);
 ptr_884_params.push_back(ptr_883);
 CallInst* ptr_884 = CallInst::Create(func_and_int, ptr_884_params, "", label_863);
 ptr_884->setCallingConv(CallingConv::C);
 ptr_884->setTailCall(false);
 AttributeSet ptr_884_PAL;
 ptr_884->setAttributes(ptr_884_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_884, label_863);
 
}

// Function: or_any (func_or_any)
{
 Function::arg_iterator args = func_or_any->arg_begin();
 Value* ptr_a_886 = args++;
 ptr_a_886->setName("a");
 Value* ptr_b_887 = args++;
 ptr_b_887->setName("b");
 
 BasicBlock* label_888 = BasicBlock::Create(mod->getContext(), "",func_or_any,0);
 BasicBlock* label_889 = BasicBlock::Create(mod->getContext(), "",func_or_any,0);
 BasicBlock* label_890 = BasicBlock::Create(mod->getContext(), "",func_or_any,0);
 BasicBlock* label_891 = BasicBlock::Create(mod->getContext(), "",func_or_any,0);
 
 // Block  (label_888)
 AllocaInst* ptr_892 = new AllocaInst(PointerTy_30, "", label_888);
 ptr_892->setAlignment(8);
 AllocaInst* ptr_893 = new AllocaInst(PointerTy_30, "", label_888);
 ptr_893->setAlignment(8);
 StoreInst* void_894 = new StoreInst(ptr_a_886, ptr_892, false, label_888);
 void_894->setAlignment(8);
 StoreInst* void_895 = new StoreInst(ptr_b_887, ptr_893, false, label_888);
 void_895->setAlignment(8);
 LoadInst* ptr_896 = new LoadInst(ptr_892, "", false, label_888);
 ptr_896->setAlignment(8);
 GetElementPtrInst* ptr_897 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_896, {
  const_int32_72, 
  const_int32_72
 }, "", label_888);
 CastInst* ptr_898 = new BitCastInst(ptr_897, PointerTy_37, "", label_888);
 LoadInst* int32_899 = new LoadInst(ptr_898, "", false, label_888);
 int32_899->setAlignment(8);
 ICmpInst* int1_900 = new ICmpInst(*label_888, ICmpInst::ICMP_NE, int32_899, const_int32_70, "");
 BranchInst::Create(label_890, label_889, int1_900, label_888);
 
 // Block  (label_889)
 LoadInst* ptr_902 = new LoadInst(ptr_893, "", false, label_889);
 ptr_902->setAlignment(8);
 GetElementPtrInst* ptr_903 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_902, {
  const_int32_72, 
  const_int32_72
 }, "", label_889);
 CastInst* ptr_904 = new BitCastInst(ptr_903, PointerTy_37, "", label_889);
 LoadInst* int32_905 = new LoadInst(ptr_904, "", false, label_889);
 int32_905->setAlignment(8);
 ICmpInst* int1_906 = new ICmpInst(*label_889, ICmpInst::ICMP_NE, int32_905, const_int32_70, "");
 BranchInst::Create(label_890, label_891, int1_906, label_889);
 
 // Block  (label_890)
 CallInst* void_908 = CallInst::Create(func_error, const_ptr_81, "", label_890);
 void_908->setCallingConv(CallingConv::C);
 void_908->setTailCall(false);
 AttributeSet void_908_PAL;
 void_908->setAttributes(void_908_PAL);
 
 BranchInst::Create(label_891, label_890);
 
 // Block  (label_891)
 LoadInst* ptr_910 = new LoadInst(ptr_892, "", false, label_891);
 ptr_910->setAlignment(8);
 LoadInst* ptr_911 = new LoadInst(ptr_893, "", false, label_891);
 ptr_911->setAlignment(8);
 std::vector<Value*> ptr_912_params;
 ptr_912_params.push_back(ptr_910);
 ptr_912_params.push_back(ptr_911);
 CallInst* ptr_912 = CallInst::Create(func_or_int, ptr_912_params, "", label_891);
 ptr_912->setCallingConv(CallingConv::C);
 ptr_912->setTailCall(false);
 AttributeSet ptr_912_PAL;
 ptr_912->setAttributes(ptr_912_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_912, label_891);
 
}

// Function: cons_any (func_cons_any)
{
 Function::arg_iterator args = func_cons_any->arg_begin();
 Value* ptr_a_914 = args++;
 ptr_a_914->setName("a");
 Value* ptr_b_915 = args++;
 ptr_b_915->setName("b");
 
 BasicBlock* label_916 = BasicBlock::Create(mod->getContext(), "",func_cons_any,0);
 
 // Block  (label_916)
 AllocaInst* ptr_917 = new AllocaInst(PointerTy_30, "", label_916);
 ptr_917->setAlignment(8);
 AllocaInst* ptr_918 = new AllocaInst(PointerTy_30, "", label_916);
 ptr_918->setAlignment(8);
 StoreInst* void_919 = new StoreInst(ptr_a_914, ptr_917, false, label_916);
 void_919->setAlignment(8);
 StoreInst* void_920 = new StoreInst(ptr_b_915, ptr_918, false, label_916);
 void_920->setAlignment(8);
 LoadInst* ptr_921 = new LoadInst(ptr_917, "", false, label_916);
 ptr_921->setAlignment(8);
 LoadInst* ptr_922 = new LoadInst(ptr_918, "", false, label_916);
 ptr_922->setAlignment(8);
 std::vector<Value*> ptr_923_params;
 ptr_923_params.push_back(ptr_921);
 ptr_923_params.push_back(ptr_922);
 CallInst* ptr_923 = CallInst::Create(func_makeList, ptr_923_params, "", label_916);
 ptr_923->setCallingConv(CallingConv::C);
 ptr_923->setTailCall(false);
 AttributeSet ptr_923_PAL;
 ptr_923->setAttributes(ptr_923_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_923, label_916);
 
}

// Function: hd (func_hd)
{
 Function::arg_iterator args = func_hd->arg_begin();
 Value* ptr_obj = args++;
 ptr_obj->setName("obj");
 
 BasicBlock* label_925 = BasicBlock::Create(mod->getContext(), "",func_hd,0);
 
 // Block  (label_925)
 AllocaInst* ptr_926 = new AllocaInst(PointerTy_30, "", label_925);
 ptr_926->setAlignment(8);
 StoreInst* void_927 = new StoreInst(ptr_obj, ptr_926, false, label_925);
 void_927->setAlignment(8);
 LoadInst* ptr_928 = new LoadInst(ptr_926, "", false, label_925);
 ptr_928->setAlignment(8);
 GetElementPtrInst* ptr_929 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_928, {
  const_int32_72, 
  const_int32_72
 }, "", label_925);
 CastInst* ptr_930 = new BitCastInst(ptr_929, PointerTy_33, "", label_925);
 LoadInst* ptr_931 = new LoadInst(ptr_930, "", false, label_925);
 ptr_931->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_931, label_925);
 
}

// Function: tl (func_tl)
{
 Function::arg_iterator args = func_tl->arg_begin();
 Value* ptr_obj_933 = args++;
 ptr_obj_933->setName("obj");
 
 BasicBlock* label_934 = BasicBlock::Create(mod->getContext(), "",func_tl,0);
 
 // Block  (label_934)
 AllocaInst* ptr_935 = new AllocaInst(PointerTy_30, "", label_934);
 ptr_935->setAlignment(8);
 StoreInst* void_936 = new StoreInst(ptr_obj_933, ptr_935, false, label_934);
 void_936->setAlignment(8);
 LoadInst* ptr_937 = new LoadInst(ptr_935, "", false, label_934);
 ptr_937->setAlignment(8);
 GetElementPtrInst* ptr_938 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_937, {
  const_int32_72, 
  const_int32_70
 }, "", label_934);
 CastInst* ptr_939 = new BitCastInst(ptr_938, PointerTy_33, "", label_934);
 LoadInst* ptr_940 = new LoadInst(ptr_939, "", false, label_934);
 ptr_940->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_940, label_934);
 
}

// Function: hd_any (func_hd_any)
{
 Function::arg_iterator args = func_hd_any->arg_begin();
 Value* ptr_obj_942 = args++;
 ptr_obj_942->setName("obj");
 
 BasicBlock* label_943 = BasicBlock::Create(mod->getContext(), "",func_hd_any,0);
 BasicBlock* label_944 = BasicBlock::Create(mod->getContext(), "",func_hd_any,0);
 BasicBlock* label_945 = BasicBlock::Create(mod->getContext(), "",func_hd_any,0);
 
 // Block  (label_943)
 AllocaInst* ptr_946 = new AllocaInst(PointerTy_30, "", label_943);
 ptr_946->setAlignment(8);
 StoreInst* void_947 = new StoreInst(ptr_obj_942, ptr_946, false, label_943);
 void_947->setAlignment(8);
 LoadInst* ptr_948 = new LoadInst(ptr_946, "", false, label_943);
 ptr_948->setAlignment(8);
 GetElementPtrInst* ptr_949 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_948, {
  const_int32_72, 
  const_int32_72
 }, "", label_943);
 CastInst* ptr_950 = new BitCastInst(ptr_949, PointerTy_33, "", label_943);
 LoadInst* ptr_951 = new LoadInst(ptr_950, "", false, label_943);
 ptr_951->setAlignment(8);
 CastInst* int64_952 = new PtrToIntInst(ptr_951, IntegerType::get(mod->getContext(), 64), "", label_943);
 ICmpInst* int1_953 = new ICmpInst(*label_943, ICmpInst::ICMP_ULT, int64_952, const_int64_82, "");
 BranchInst::Create(label_944, label_945, int1_953, label_943);
 
 // Block  (label_944)
 CallInst* void_955 = CallInst::Create(func_error, const_ptr_83, "", label_944);
 void_955->setCallingConv(CallingConv::C);
 void_955->setTailCall(false);
 AttributeSet void_955_PAL;
 void_955->setAttributes(void_955_PAL);
 
 BranchInst::Create(label_945, label_944);
 
 // Block  (label_945)
 LoadInst* ptr_957 = new LoadInst(ptr_946, "", false, label_945);
 ptr_957->setAlignment(8);
 CallInst* ptr_958 = CallInst::Create(func_hd, ptr_957, "", label_945);
 ptr_958->setCallingConv(CallingConv::C);
 ptr_958->setTailCall(false);
 AttributeSet ptr_958_PAL;
 ptr_958->setAttributes(ptr_958_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_958, label_945);
 
}

// Function: tl_any (func_tl_any)
{
 Function::arg_iterator args = func_tl_any->arg_begin();
 Value* ptr_obj_960 = args++;
 ptr_obj_960->setName("obj");
 
 BasicBlock* label_961 = BasicBlock::Create(mod->getContext(), "",func_tl_any,0);
 BasicBlock* label_962 = BasicBlock::Create(mod->getContext(), "",func_tl_any,0);
 BasicBlock* label_963 = BasicBlock::Create(mod->getContext(), "",func_tl_any,0);
 
 // Block  (label_961)
 AllocaInst* ptr_964 = new AllocaInst(PointerTy_30, "", label_961);
 ptr_964->setAlignment(8);
 StoreInst* void_965 = new StoreInst(ptr_obj_960, ptr_964, false, label_961);
 void_965->setAlignment(8);
 LoadInst* ptr_966 = new LoadInst(ptr_964, "", false, label_961);
 ptr_966->setAlignment(8);
 GetElementPtrInst* ptr_967 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_966, {
  const_int32_72, 
  const_int32_72
 }, "", label_961);
 CastInst* ptr_968 = new BitCastInst(ptr_967, PointerTy_33, "", label_961);
 LoadInst* ptr_969 = new LoadInst(ptr_968, "", false, label_961);
 ptr_969->setAlignment(8);
 CastInst* int64_970 = new PtrToIntInst(ptr_969, IntegerType::get(mod->getContext(), 64), "", label_961);
 ICmpInst* int1_971 = new ICmpInst(*label_961, ICmpInst::ICMP_ULT, int64_970, const_int64_82, "");
 BranchInst::Create(label_962, label_963, int1_971, label_961);
 
 // Block  (label_962)
 CallInst* void_973 = CallInst::Create(func_error, const_ptr_83, "", label_962);
 void_973->setCallingConv(CallingConv::C);
 void_973->setTailCall(false);
 AttributeSet void_973_PAL;
 void_973->setAttributes(void_973_PAL);
 
 BranchInst::Create(label_963, label_962);
 
 // Block  (label_963)
 LoadInst* ptr_975 = new LoadInst(ptr_964, "", false, label_963);
 ptr_975->setAlignment(8);
 CallInst* ptr_976 = CallInst::Create(func_tl, ptr_975, "", label_963);
 ptr_976->setCallingConv(CallingConv::C);
 ptr_976->setTailCall(false);
 AttributeSet ptr_976_PAL;
 ptr_976->setAttributes(ptr_976_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_976, label_963);
 
}

// Function: is_nil (func_is_nil)
{
 Function::arg_iterator args = func_is_nil->arg_begin();
 Value* ptr_obj_978 = args++;
 ptr_obj_978->setName("obj");
 
 BasicBlock* label_979 = BasicBlock::Create(mod->getContext(), "",func_is_nil,0);
 
 // Block  (label_979)
 AllocaInst* ptr_980 = new AllocaInst(PointerTy_30, "", label_979);
 ptr_980->setAlignment(8);
 StoreInst* void_981 = new StoreInst(ptr_obj_978, ptr_980, false, label_979);
 void_981->setAlignment(8);
 LoadInst* ptr_982 = new LoadInst(ptr_980, "", false, label_979);
 ptr_982->setAlignment(8);
 GetElementPtrInst* ptr_983 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_982, {
  const_int32_72, 
  const_int32_72
 }, "", label_979);
 CastInst* ptr_984 = new BitCastInst(ptr_983, PointerTy_37, "", label_979);
 LoadInst* int32_985 = new LoadInst(ptr_984, "", false, label_979);
 int32_985->setAlignment(8);
 ICmpInst* int1_986 = new ICmpInst(*label_979, ICmpInst::ICMP_EQ, int32_985, const_int32_72, "");
 CastInst* int32_987 = new ZExtInst(int1_986, IntegerType::get(mod->getContext(), 32), "", label_979);
 CastInst* int64_988 = new SExtInst(int32_987, IntegerType::get(mod->getContext(), 64), "", label_979);
 CallInst* ptr_989 = CallInst::Create(func_makeInt, int64_988, "", label_979);
 ptr_989->setCallingConv(CallingConv::C);
 ptr_989->setTailCall(false);
 AttributeSet ptr_989_PAL;
 ptr_989->setAttributes(ptr_989_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_989, label_979);
 
}

// Function: print_int (func_print_int)
{
 Function::arg_iterator args = func_print_int->arg_begin();
 Value* ptr_obj_991 = args++;
 ptr_obj_991->setName("obj");
 
 BasicBlock* label_992 = BasicBlock::Create(mod->getContext(), "",func_print_int,0);
 
 // Block  (label_992)
 AllocaInst* ptr_993 = new AllocaInst(PointerTy_30, "", label_992);
 ptr_993->setAlignment(8);
 StoreInst* void_994 = new StoreInst(ptr_obj_991, ptr_993, false, label_992);
 void_994->setAlignment(8);
 LoadInst* ptr_995 = new LoadInst(ptr_993, "", false, label_992);
 ptr_995->setAlignment(8);
 GetElementPtrInst* ptr_996 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_995, {
  const_int32_72, 
  const_int32_70
 }, "", label_992);
 CastInst* ptr_997 = new BitCastInst(ptr_996, PointerTy_32, "", label_992);
 LoadInst* int64_998 = new LoadInst(ptr_997, "", false, label_992);
 int64_998->setAlignment(8);
 std::vector<Value*> int32_999_params;
 int32_999_params.push_back(const_ptr_84);
 int32_999_params.push_back(int64_998);
 CallInst* int32_999 = CallInst::Create(func_printf, int32_999_params, "", label_992);
 int32_999->setCallingConv(CallingConv::C);
 int32_999->setTailCall(false);
 AttributeSet int32_999_PAL;
 int32_999->setAttributes(int32_999_PAL);
 
 CallInst* ptr_1000 = CallInst::Create(func_makeInt, const_int64_85, "", label_992);
 ptr_1000->setCallingConv(CallingConv::C);
 ptr_1000->setTailCall(false);
 AttributeSet ptr_1000_PAL;
 ptr_1000->setAttributes(ptr_1000_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_1000, label_992);
 
}

// Function: print_str (func_print_str)
{
 Function::arg_iterator args = func_print_str->arg_begin();
 Value* ptr_obj_1002 = args++;
 ptr_obj_1002->setName("obj");
 
 BasicBlock* label_1003 = BasicBlock::Create(mod->getContext(), "",func_print_str,0);
 
 // Block  (label_1003)
 AllocaInst* ptr_1004 = new AllocaInst(PointerTy_30, "", label_1003);
 ptr_1004->setAlignment(8);
 StoreInst* void_1005 = new StoreInst(ptr_obj_1002, ptr_1004, false, label_1003);
 void_1005->setAlignment(8);
 LoadInst* ptr_1006 = new LoadInst(ptr_1004, "", false, label_1003);
 ptr_1006->setAlignment(8);
 GetElementPtrInst* ptr_1007 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_1006, {
  const_int32_72, 
  const_int32_70
 }, "", label_1003);
 CastInst* ptr_1008 = new BitCastInst(ptr_1007, PointerTy_25, "", label_1003);
 LoadInst* ptr_1009 = new LoadInst(ptr_1008, "", false, label_1003);
 ptr_1009->setAlignment(8);
 std::vector<Value*> int32_1010_params;
 int32_1010_params.push_back(const_ptr_71);
 int32_1010_params.push_back(ptr_1009);
 CallInst* int32_1010 = CallInst::Create(func_printf, int32_1010_params, "", label_1003);
 int32_1010->setCallingConv(CallingConv::C);
 int32_1010->setTailCall(false);
 AttributeSet int32_1010_PAL;
 int32_1010->setAttributes(int32_1010_PAL);
 
 CallInst* ptr_1011 = CallInst::Create(func_makeInt, const_int64_85, "", label_1003);
 ptr_1011->setCallingConv(CallingConv::C);
 ptr_1011->setTailCall(false);
 AttributeSet ptr_1011_PAL;
 ptr_1011->setAttributes(ptr_1011_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_1011, label_1003);
 
}

// Function: print_list (func_print_list)
{
 Function::arg_iterator args = func_print_list->arg_begin();
 Value* ptr_t = args++;
 ptr_t->setName("t");
 
 BasicBlock* label_1013 = BasicBlock::Create(mod->getContext(), "",func_print_list,0);
 BasicBlock* label_1014 = BasicBlock::Create(mod->getContext(), "",func_print_list,0);
 BasicBlock* label_1015 = BasicBlock::Create(mod->getContext(), "",func_print_list,0);
 BasicBlock* label_1016 = BasicBlock::Create(mod->getContext(), "",func_print_list,0);
 
 // Block  (label_1013)
 AllocaInst* ptr_1017 = new AllocaInst(PointerTy_30, "", label_1013);
 ptr_1017->setAlignment(8);
 StoreInst* void_1018 = new StoreInst(ptr_t, ptr_1017, false, label_1013);
 void_1018->setAlignment(8);
 CallInst* int32_1019 = CallInst::Create(func_printf, const_ptr_86, "", label_1013);
 int32_1019->setCallingConv(CallingConv::C);
 int32_1019->setTailCall(false);
 AttributeSet int32_1019_PAL;
 int32_1019->setAttributes(int32_1019_PAL);
 
 LoadInst* ptr_1020 = new LoadInst(ptr_1017, "", false, label_1013);
 ptr_1020->setAlignment(8);
 ICmpInst* int1_1021 = new ICmpInst(*label_1013, ICmpInst::ICMP_NE, ptr_1020, const_ptr_79, "");
 BranchInst::Create(label_1014, label_1015, int1_1021, label_1013);
 
 // Block  (label_1014)
 LoadInst* ptr_1023 = new LoadInst(ptr_1017, "", false, label_1014);
 ptr_1023->setAlignment(8);
 GetElementPtrInst* ptr_1024 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_1023, {
  const_int32_72, 
  const_int32_72
 }, "", label_1014);
 CastInst* ptr_1025 = new BitCastInst(ptr_1024, PointerTy_33, "", label_1014);
 LoadInst* ptr_1026 = new LoadInst(ptr_1025, "", false, label_1014);
 ptr_1026->setAlignment(8);
 CallInst* ptr_1027 = CallInst::Create(func_print_any, ptr_1026, "", label_1014);
 ptr_1027->setCallingConv(CallingConv::C);
 ptr_1027->setTailCall(false);
 AttributeSet ptr_1027_PAL;
 ptr_1027->setAttributes(ptr_1027_PAL);
 
 CastInst* ptr_1028 = new BitCastInst(ptr_1027, PointerTy_4, "", label_1014);
 CallInst* void_1029 = CallInst::Create(func_free, ptr_1028, "", label_1014);
 void_1029->setCallingConv(CallingConv::C);
 void_1029->setTailCall(false);
 AttributeSet void_1029_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1029_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1029->setAttributes(void_1029_PAL);
 
 LoadInst* ptr_1030 = new LoadInst(ptr_1017, "", false, label_1014);
 ptr_1030->setAlignment(8);
 GetElementPtrInst* ptr_1031 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_1030, {
  const_int32_72, 
  const_int32_70
 }, "", label_1014);
 CastInst* ptr_1032 = new BitCastInst(ptr_1031, PointerTy_33, "", label_1014);
 LoadInst* ptr_1033 = new LoadInst(ptr_1032, "", false, label_1014);
 ptr_1033->setAlignment(8);
 CallInst* ptr_1034 = CallInst::Create(func_print_list, ptr_1033, "", label_1014);
 ptr_1034->setCallingConv(CallingConv::C);
 ptr_1034->setTailCall(false);
 AttributeSet ptr_1034_PAL;
 ptr_1034->setAttributes(ptr_1034_PAL);
 
 CastInst* ptr_1035 = new BitCastInst(ptr_1034, PointerTy_4, "", label_1014);
 CallInst* void_1036 = CallInst::Create(func_free, ptr_1035, "", label_1014);
 void_1036->setCallingConv(CallingConv::C);
 void_1036->setTailCall(false);
 AttributeSet void_1036_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1036_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1036->setAttributes(void_1036_PAL);
 
 CallInst* int32_1037 = CallInst::Create(func_printf, const_ptr_87, "", label_1014);
 int32_1037->setCallingConv(CallingConv::C);
 int32_1037->setTailCall(false);
 AttributeSet int32_1037_PAL;
 int32_1037->setAttributes(int32_1037_PAL);
 
 BranchInst::Create(label_1016, label_1014);
 
 // Block  (label_1015)
 CallInst* int32_1039 = CallInst::Create(func_printf, const_ptr_88, "", label_1015);
 int32_1039->setCallingConv(CallingConv::C);
 int32_1039->setTailCall(false);
 AttributeSet int32_1039_PAL;
 int32_1039->setAttributes(int32_1039_PAL);
 
 BranchInst::Create(label_1016, label_1015);
 
 // Block  (label_1016)
 CallInst* ptr_1041 = CallInst::Create(func_makeInt, const_int64_85, "", label_1016);
 ptr_1041->setCallingConv(CallingConv::C);
 ptr_1041->setTailCall(false);
 AttributeSet ptr_1041_PAL;
 ptr_1041->setAttributes(ptr_1041_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_1041, label_1016);
 
}

// Function: print_any (func_print_any)
{
 Function::arg_iterator args = func_print_any->arg_begin();
 Value* ptr_obj_1043 = args++;
 ptr_obj_1043->setName("obj");
 
 BasicBlock* label_1044 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1045 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1046 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1047 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1048 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1049 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1050 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1051 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1052 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 BasicBlock* label_1053 = BasicBlock::Create(mod->getContext(), "",func_print_any,0);
 
 // Block  (label_1044)
 AllocaInst* ptr_1054 = new AllocaInst(PointerTy_30, "", label_1044);
 ptr_1054->setAlignment(8);
 AllocaInst* ptr_1055 = new AllocaInst(PointerTy_30, "", label_1044);
 ptr_1055->setAlignment(8);
 StoreInst* void_1056 = new StoreInst(ptr_obj_1043, ptr_1055, false, label_1044);
 void_1056->setAlignment(8);
 LoadInst* ptr_1057 = new LoadInst(ptr_1055, "", false, label_1044);
 ptr_1057->setAlignment(8);
 GetElementPtrInst* ptr_1058 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_1057, {
  const_int32_72, 
  const_int32_72
 }, "", label_1044);
 CastInst* ptr_1059 = new BitCastInst(ptr_1058, PointerTy_37, "", label_1044);
 LoadInst* int32_1060 = new LoadInst(ptr_1059, "", false, label_1044);
 int32_1060->setAlignment(8);
 ICmpInst* int1_1061 = new ICmpInst(*label_1044, ICmpInst::ICMP_EQ, int32_1060, const_int32_72, "");
 BranchInst::Create(label_1045, label_1046, int1_1061, label_1044);
 
 // Block  (label_1045)
 CallInst* int32_1063 = CallInst::Create(func_printf, const_ptr_89, "", label_1045);
 int32_1063->setCallingConv(CallingConv::C);
 int32_1063->setTailCall(false);
 AttributeSet int32_1063_PAL;
 int32_1063->setAttributes(int32_1063_PAL);
 
 CallInst* ptr_1064 = CallInst::Create(func_makeInt, const_int64_85, "", label_1045);
 ptr_1064->setCallingConv(CallingConv::C);
 ptr_1064->setTailCall(false);
 AttributeSet ptr_1064_PAL;
 ptr_1064->setAttributes(ptr_1064_PAL);
 
 StoreInst* void_1065 = new StoreInst(ptr_1064, ptr_1054, false, label_1045);
 void_1065->setAlignment(8);
 BranchInst::Create(label_1053, label_1045);
 
 // Block  (label_1046)
 LoadInst* ptr_1067 = new LoadInst(ptr_1055, "", false, label_1046);
 ptr_1067->setAlignment(8);
 GetElementPtrInst* ptr_1068 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_1067, {
  const_int32_72, 
  const_int32_72
 }, "", label_1046);
 CastInst* ptr_1069 = new BitCastInst(ptr_1068, PointerTy_37, "", label_1046);
 LoadInst* int32_1070 = new LoadInst(ptr_1069, "", false, label_1046);
 int32_1070->setAlignment(8);
 ICmpInst* int1_1071 = new ICmpInst(*label_1046, ICmpInst::ICMP_EQ, int32_1070, const_int32_70, "");
 BranchInst::Create(label_1047, label_1048, int1_1071, label_1046);
 
 // Block  (label_1047)
 LoadInst* ptr_1073 = new LoadInst(ptr_1055, "", false, label_1047);
 ptr_1073->setAlignment(8);
 CallInst* ptr_1074 = CallInst::Create(func_print_int, ptr_1073, "", label_1047);
 ptr_1074->setCallingConv(CallingConv::C);
 ptr_1074->setTailCall(false);
 AttributeSet ptr_1074_PAL;
 ptr_1074->setAttributes(ptr_1074_PAL);
 
 StoreInst* void_1075 = new StoreInst(ptr_1074, ptr_1054, false, label_1047);
 void_1075->setAlignment(8);
 BranchInst::Create(label_1053, label_1047);
 
 // Block  (label_1048)
 LoadInst* ptr_1077 = new LoadInst(ptr_1055, "", false, label_1048);
 ptr_1077->setAlignment(8);
 GetElementPtrInst* ptr_1078 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_1077, {
  const_int32_72, 
  const_int32_72
 }, "", label_1048);
 CastInst* ptr_1079 = new BitCastInst(ptr_1078, PointerTy_37, "", label_1048);
 LoadInst* int32_1080 = new LoadInst(ptr_1079, "", false, label_1048);
 int32_1080->setAlignment(8);
 ICmpInst* int1_1081 = new ICmpInst(*label_1048, ICmpInst::ICMP_EQ, int32_1080, const_int32_75, "");
 BranchInst::Create(label_1049, label_1050, int1_1081, label_1048);
 
 // Block  (label_1049)
 LoadInst* ptr_1083 = new LoadInst(ptr_1055, "", false, label_1049);
 ptr_1083->setAlignment(8);
 CallInst* ptr_1084 = CallInst::Create(func_print_str, ptr_1083, "", label_1049);
 ptr_1084->setCallingConv(CallingConv::C);
 ptr_1084->setTailCall(false);
 AttributeSet ptr_1084_PAL;
 ptr_1084->setAttributes(ptr_1084_PAL);
 
 StoreInst* void_1085 = new StoreInst(ptr_1084, ptr_1054, false, label_1049);
 void_1085->setAlignment(8);
 BranchInst::Create(label_1053, label_1049);
 
 // Block  (label_1050)
 LoadInst* ptr_1087 = new LoadInst(ptr_1055, "", false, label_1050);
 ptr_1087->setAlignment(8);
 GetElementPtrInst* ptr_1088 = GetElementPtrInst::Create(StructTy_struct_Object, ptr_1087, {
  const_int32_72, 
  const_int32_72
 }, "", label_1050);
 CastInst* ptr_1089 = new BitCastInst(ptr_1088, PointerTy_37, "", label_1050);
 LoadInst* int32_1090 = new LoadInst(ptr_1089, "", false, label_1050);
 int32_1090->setAlignment(8);
 ICmpInst* int1_1091 = new ICmpInst(*label_1050, ICmpInst::ICMP_EQ, int32_1090, const_int32_90, "");
 BranchInst::Create(label_1051, label_1052, int1_1091, label_1050);
 
 // Block  (label_1051)
 CallInst* int32_1093 = CallInst::Create(func_printf, const_ptr_91, "", label_1051);
 int32_1093->setCallingConv(CallingConv::C);
 int32_1093->setTailCall(false);
 AttributeSet int32_1093_PAL;
 int32_1093->setAttributes(int32_1093_PAL);
 
 CallInst* ptr_1094 = CallInst::Create(func_makeInt, const_int64_85, "", label_1051);
 ptr_1094->setCallingConv(CallingConv::C);
 ptr_1094->setTailCall(false);
 AttributeSet ptr_1094_PAL;
 ptr_1094->setAttributes(ptr_1094_PAL);
 
 StoreInst* void_1095 = new StoreInst(ptr_1094, ptr_1054, false, label_1051);
 void_1095->setAlignment(8);
 BranchInst::Create(label_1053, label_1051);
 
 // Block  (label_1052)
 LoadInst* ptr_1097 = new LoadInst(ptr_1055, "", false, label_1052);
 ptr_1097->setAlignment(8);
 CallInst* ptr_1098 = CallInst::Create(func_print_list, ptr_1097, "", label_1052);
 ptr_1098->setCallingConv(CallingConv::C);
 ptr_1098->setTailCall(false);
 AttributeSet ptr_1098_PAL;
 ptr_1098->setAttributes(ptr_1098_PAL);
 
 StoreInst* void_1099 = new StoreInst(ptr_1098, ptr_1054, false, label_1052);
 void_1099->setAlignment(8);
 BranchInst::Create(label_1053, label_1052);
 
 // Block  (label_1053)
 LoadInst* ptr_1101 = new LoadInst(ptr_1054, "", false, label_1053);
 ptr_1101->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_1101, label_1053);
 
}

// Function: main (func_main)
{
 
 BasicBlock* label_1103 = BasicBlock::Create(mod->getContext(), "",func_main,0);
 
 // Block  (label_1103)
 CallInst* int32_1104 = CallInst::Create(func_printf, const_ptr_92, "", label_1103);
 int32_1104->setCallingConv(CallingConv::C);
 int32_1104->setTailCall(false);
 AttributeSet int32_1104_PAL;
 int32_1104->setAttributes(int32_1104_PAL);
 
 ReturnInst::Create(mod->getContext(), const_int32_72, label_1103);
 
}

return mod;
}
